{
  "_version": "4.0",
  "metadata": [
    {
      "name": "FORMAT",
      "value": "1A"
    },
    {
      "name": "HOST",
      "value": "https://api.example.org"
    }
  ],
  "name": "API Blueprint Demo API",
  "description": "The API Blueprint Demo API can be used to retrieve information on everything related\nto api documentations.\n\n# Versioning\n\nCurrently, the only supported version of the API is `v2`, accessible under `/api/v2/`.\n\n# JSON API\n\nIn the following section, a short overview of the general capabilities\nof the API will be given.\n\n**Note:** This documentation will display parameters with brackets\n(`[` and `]`) for readability, but actual URLs will need to be\npercent-encoded (`%5B` and `%5D`).\n\n## Filtering and Search\n\nFiltering lets you query data that contains certain matching\nattributes or relationships. These take the form of\n`filter[attribute]=value`.\n\n## Pagination\n\nPagination is enabled by default for large sets of results (as is the case\nwith stations). You can optionally disable pagination by passing\nalong the `paginated` parameter and setting it to false:\n\n```\n/formats?paginated=false\n```\n\nPaginated responses will include URLs for the first, last, previous and next page\nof resources in the `links` object.\n\n## Includes\n\nFor some resources, you can also include related resources\nwith `include=[relationship]`. A comma-delimited list can be used to\nrequest multiple relationships.\n\n## Dates\n\nAll dates will be `UTC` by default. If you wish to use a different timezone,\nyou should convert these dates locally on your client.\n\n# HTTP Methods\n\nMethod   | Description\n-------- | -----------\n`GET`    | Fetch - retrieve resources\n\n# Status Codes\n\nCode  | Description\n----- | -----------\n`200` | OK\n`400` | Bad Request - malformed request\n`401` | Unauthorized - invalid or no authentication details provided\n`404` | Not Found - resource does not exist\n`405` | Method Not Allowed\n`5xx` | Server Error",
  "element": "category",
  "resourceGroups": [
    {
      "name": "Base",
      "description": "This group contains all base resources.",
      "resources": [
        {
          "element": "resource",
          "name": "Brands",
          "description": "",
          "uriTemplate": "/brands",
          "model": {},
          "parameters": [],
          "actions": [
            {
              "name": "Fetch Collection",
              "description": "",
              "method": "GET",
              "parameters": [],
              "attributes": {
                "relation": "",
                "uriTemplate": "/brands"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"ARAL Tankstelle\"\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the station brand\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "required",
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Brand",
                                          "attributes": {
                                            "typeAttributes": [
                                              "fixedType"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"title\": \"Internal Server Error\",\n  \"message\": \"Whoops, looks like something went wrong.\",\n  \"status\": 500\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"Short, human-readable summary of the error\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable explanation for this specific error\"\n    },\n    \"status\": {\n      \"type\": \"number\",\n      \"description\": \"HTTP status code generated by the origin server\"\n    }\n  },\n  \"required\": [\n    \"title\",\n    \"message\",\n    \"status\"\n  ]\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "Error500"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Fetch Resource",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "name": "id",
                  "description": "",
                  "type": "number",
                  "required": true,
                  "default": "",
                  "example": "1",
                  "values": []
                }
              ],
              "attributes": {
                "relation": "",
                "uriTemplate": "/brands/{id}"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"ARAL Tankstelle\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the station brand\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "Brand"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "404",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\",\n      \"message\": \"The requested resource could not be found\",\n      \"status\": 404\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error404"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "405",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Method Not Allowed\",\n      \"message\": \"The method specified in the request is not allowed for this resource\",\n      \"status\": 405\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error405"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Internal Server Error\",\n      \"message\": \"Whoops, looks like something went wrong.\",\n      \"status\": 500\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error500"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "content": [
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "Brand",
                  "meta": {
                    "id": "Brands"
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "resource",
          "name": "Cards",
          "description": "",
          "uriTemplate": "/cards",
          "model": {},
          "parameters": [],
          "actions": [
            {
              "name": "Fetch Collection",
              "description": "",
              "method": "GET",
              "parameters": [],
              "attributes": {
                "relation": "",
                "uriTemplate": "/cards"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Visacard\",\n      \"icon\": \"null\"\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the card\"\n          },\n          \"icon\": {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ],\n            \"description\": \"Optional icon (png) path\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"icon\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "required",
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Card",
                                          "attributes": {
                                            "typeAttributes": [
                                              "fixedType"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"title\": \"Internal Server Error\",\n  \"message\": \"Whoops, looks like something went wrong.\",\n  \"status\": 500\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"Short, human-readable summary of the error\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable explanation for this specific error\"\n    },\n    \"status\": {\n      \"type\": \"number\",\n      \"description\": \"HTTP status code generated by the origin server\"\n    }\n  },\n  \"required\": [\n    \"title\",\n    \"message\",\n    \"status\"\n  ]\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "Error500"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Fetch Resource",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "name": "id",
                  "description": "",
                  "type": "number",
                  "required": true,
                  "default": "",
                  "example": "1",
                  "values": []
                }
              ],
              "attributes": {
                "relation": "",
                "uriTemplate": "/cards/{id}"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Visacard\",\n    \"icon\": \"null\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the card\"\n        },\n        \"icon\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Optional icon (png) path\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"icon\"\n      ],\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "Card"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "404",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\",\n      \"message\": \"The requested resource could not be found\",\n      \"status\": 404\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error404"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "405",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Method Not Allowed\",\n      \"message\": \"The method specified in the request is not allowed for this resource\",\n      \"status\": 405\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error405"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Internal Server Error\",\n      \"message\": \"Whoops, looks like something went wrong.\",\n      \"status\": 500\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error500"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "content": [
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "Card",
                  "meta": {
                    "id": "Cards"
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "resource",
          "name": "Distribution Channels",
          "description": "",
          "uriTemplate": "/channels",
          "model": {},
          "parameters": [],
          "actions": [
            {
              "name": "Fetch Collection",
              "description": "",
              "method": "GET",
              "parameters": [],
              "attributes": {
                "relation": "",
                "uriTemplate": "/channels"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Company Owned, Dealer Operated\",\n      \"identifier\": \"CODO\"\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the distribution channel\"\n          },\n          \"identifier\": {\n            \"type\": \"string\",\n            \"description\": \"Unique string identifier of the distribution channel\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"identifier\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "required",
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Channel",
                                          "attributes": {
                                            "typeAttributes": [
                                              "fixedType"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"title\": \"Internal Server Error\",\n  \"message\": \"Whoops, looks like something went wrong.\",\n  \"status\": 500\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"Short, human-readable summary of the error\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable explanation for this specific error\"\n    },\n    \"status\": {\n      \"type\": \"number\",\n      \"description\": \"HTTP status code generated by the origin server\"\n    }\n  },\n  \"required\": [\n    \"title\",\n    \"message\",\n    \"status\"\n  ]\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "Error500"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Fetch Resource",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "name": "id",
                  "description": "",
                  "type": "number",
                  "required": true,
                  "default": "",
                  "example": "1",
                  "values": []
                }
              ],
              "attributes": {
                "relation": "",
                "uriTemplate": "/channels/{id}"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Company Owned, Dealer Operated\",\n    \"identifier\": \"CODO\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the distribution channel\"\n        },\n        \"identifier\": {\n          \"type\": \"string\",\n          \"description\": \"Unique string identifier of the distribution channel\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"identifier\"\n      ],\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "Channel"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "404",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\",\n      \"message\": \"The requested resource could not be found\",\n      \"status\": 404\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error404"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "405",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Method Not Allowed\",\n      \"message\": \"The method specified in the request is not allowed for this resource\",\n      \"status\": 405\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error405"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Internal Server Error\",\n      \"message\": \"Whoops, looks like something went wrong.\",\n      \"status\": 500\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error500"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "content": [
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "Channel",
                  "meta": {
                    "id": "Distribution Channels"
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "content": [
    {
      "element": "category",
      "attributes": {
        "name": "Base"
      },
      "content": [
        {
          "element": "copy",
          "content": "This group contains all base resources."
        },
        {
          "element": "resource",
          "name": "Brands",
          "description": "",
          "uriTemplate": "/brands",
          "model": {},
          "parameters": [],
          "actions": [
            {
              "name": "Fetch Collection",
              "description": "",
              "method": "GET",
              "parameters": [],
              "attributes": {
                "relation": "",
                "uriTemplate": "/brands"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"ARAL Tankstelle\"\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the station brand\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "required",
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Brand",
                                          "attributes": {
                                            "typeAttributes": [
                                              "fixedType"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"title\": \"Internal Server Error\",\n  \"message\": \"Whoops, looks like something went wrong.\",\n  \"status\": 500\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"Short, human-readable summary of the error\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable explanation for this specific error\"\n    },\n    \"status\": {\n      \"type\": \"number\",\n      \"description\": \"HTTP status code generated by the origin server\"\n    }\n  },\n  \"required\": [\n    \"title\",\n    \"message\",\n    \"status\"\n  ]\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "Error500"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Fetch Resource",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "name": "id",
                  "description": "",
                  "type": "number",
                  "required": true,
                  "default": "",
                  "example": "1",
                  "values": []
                }
              ],
              "attributes": {
                "relation": "",
                "uriTemplate": "/brands/{id}"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"ARAL Tankstelle\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the station brand\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "Brand"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "404",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\",\n      \"message\": \"The requested resource could not be found\",\n      \"status\": 404\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error404"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "405",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Method Not Allowed\",\n      \"message\": \"The method specified in the request is not allowed for this resource\",\n      \"status\": 405\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error405"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Internal Server Error\",\n      \"message\": \"Whoops, looks like something went wrong.\",\n      \"status\": 500\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error500"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "content": [
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "Brand",
                  "meta": {
                    "id": "Brands"
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "resource",
          "name": "Cards",
          "description": "",
          "uriTemplate": "/cards",
          "model": {},
          "parameters": [],
          "actions": [
            {
              "name": "Fetch Collection",
              "description": "",
              "method": "GET",
              "parameters": [],
              "attributes": {
                "relation": "",
                "uriTemplate": "/cards"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Visacard\",\n      \"icon\": \"null\"\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the card\"\n          },\n          \"icon\": {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ],\n            \"description\": \"Optional icon (png) path\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"icon\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "required",
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Card",
                                          "attributes": {
                                            "typeAttributes": [
                                              "fixedType"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"title\": \"Internal Server Error\",\n  \"message\": \"Whoops, looks like something went wrong.\",\n  \"status\": 500\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"Short, human-readable summary of the error\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable explanation for this specific error\"\n    },\n    \"status\": {\n      \"type\": \"number\",\n      \"description\": \"HTTP status code generated by the origin server\"\n    }\n  },\n  \"required\": [\n    \"title\",\n    \"message\",\n    \"status\"\n  ]\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "Error500"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Fetch Resource",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "name": "id",
                  "description": "",
                  "type": "number",
                  "required": true,
                  "default": "",
                  "example": "1",
                  "values": []
                }
              ],
              "attributes": {
                "relation": "",
                "uriTemplate": "/cards/{id}"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Visacard\",\n    \"icon\": \"null\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the card\"\n        },\n        \"icon\": {\n          \"type\": [\n            \"string\",\n            \"null\"\n          ],\n          \"description\": \"Optional icon (png) path\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"icon\"\n      ],\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "Card"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "404",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\",\n      \"message\": \"The requested resource could not be found\",\n      \"status\": 404\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error404"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "405",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Method Not Allowed\",\n      \"message\": \"The method specified in the request is not allowed for this resource\",\n      \"status\": 405\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error405"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Internal Server Error\",\n      \"message\": \"Whoops, looks like something went wrong.\",\n      \"status\": 500\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error500"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "content": [
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "Card",
                  "meta": {
                    "id": "Cards"
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "resource",
          "name": "Distribution Channels",
          "description": "",
          "uriTemplate": "/channels",
          "model": {},
          "parameters": [],
          "actions": [
            {
              "name": "Fetch Collection",
              "description": "",
              "method": "GET",
              "parameters": [],
              "attributes": {
                "relation": "",
                "uriTemplate": "/channels"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Company Owned, Dealer Operated\",\n      \"identifier\": \"CODO\"\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the distribution channel\"\n          },\n          \"identifier\": {\n            \"type\": \"string\",\n            \"description\": \"Unique string identifier of the distribution channel\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"identifier\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "required",
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Channel",
                                          "attributes": {
                                            "typeAttributes": [
                                              "fixedType"
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"title\": \"Internal Server Error\",\n  \"message\": \"Whoops, looks like something went wrong.\",\n  \"status\": 500\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"Short, human-readable summary of the error\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable explanation for this specific error\"\n    },\n    \"status\": {\n      \"type\": \"number\",\n      \"description\": \"HTTP status code generated by the origin server\"\n    }\n  },\n  \"required\": [\n    \"title\",\n    \"message\",\n    \"status\"\n  ]\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "Error500"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Fetch Resource",
              "description": "",
              "method": "GET",
              "parameters": [
                {
                  "name": "id",
                  "description": "",
                  "type": "number",
                  "required": true,
                  "default": "",
                  "example": "1",
                  "values": []
                }
              ],
              "attributes": {
                "relation": "",
                "uriTemplate": "/channels/{id}"
              },
              "content": [],
              "examples": [
                {
                  "name": "",
                  "description": "",
                  "requests": [],
                  "responses": [
                    {
                      "name": "200",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Company Owned, Dealer Operated\",\n    \"identifier\": \"CODO\"\n  }\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"number\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the distribution channel\"\n        },\n        \"identifier\": {\n          \"type\": \"string\",\n          \"description\": \"Unique string identifier of the distribution channel\"\n        }\n      },\n      \"required\": [\n        \"id\",\n        \"name\",\n        \"identifier\"\n      ],\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\n    \"data\"\n  ],\n  \"additionalProperties\": false\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "attributes": {
                                "typeAttributes": [
                                  "fixedType"
                                ]
                              },
                              "content": [
                                {
                                  "element": "member",
                                  "attributes": {
                                    "typeAttributes": [
                                      "fixedType"
                                    ]
                                  },
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "data"
                                    },
                                    "value": {
                                      "element": "Channel"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "404",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\",\n      \"message\": \"The requested resource could not be found\",\n      \"status\": 404\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error404"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "405",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Method Not Allowed\",\n      \"message\": \"The method specified in the request is not allowed for this resource\",\n      \"status\": 405\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error405"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "500",
                      "description": "",
                      "headers": [
                        {
                          "name": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"errors\": [\n    {\n      \"title\": \"Internal Server Error\",\n      \"message\": \"Whoops, looks like something went wrong.\",\n      \"status\": 500\n    }\n  ]\n}",
                      "schema": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"errors\": {\n      \"type\": \"array\"\n    }\n  }\n}",
                      "content": [
                        {
                          "element": "dataStructure",
                          "content": [
                            {
                              "element": "object",
                              "content": [
                                {
                                  "element": "member",
                                  "content": {
                                    "key": {
                                      "element": "string",
                                      "content": "errors"
                                    },
                                    "value": {
                                      "element": "array",
                                      "content": [
                                        {
                                          "element": "Error500"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "content": [
            {
              "element": "dataStructure",
              "content": [
                {
                  "element": "Channel",
                  "meta": {
                    "id": "Distribution Channels"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "element": "category",
      "content": [
        {
          "element": "dataStructure",
          "content": [
            {
              "element": "object",
              "meta": {
                "id": "Brand"
              },
              "content": [
                {
                  "element": "member",
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "id"
                    },
                    "value": {
                      "element": "number",
                      "content": 1
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Name of the station brand"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "name"
                    },
                    "value": {
                      "element": "string",
                      "content": "ARAL Tankstelle"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "dataStructure",
          "content": [
            {
              "element": "object",
              "meta": {
                "id": "Card"
              },
              "content": [
                {
                  "element": "member",
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "id"
                    },
                    "value": {
                      "element": "number",
                      "content": 1
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Name of the card"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "name"
                    },
                    "value": {
                      "element": "string",
                      "content": "Visacard"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Optional icon (png) path"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "nullable"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "icon"
                    },
                    "value": {
                      "element": "string",
                      "content": "null"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "dataStructure",
          "content": [
            {
              "element": "object",
              "meta": {
                "id": "Channel"
              },
              "content": [
                {
                  "element": "member",
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "id"
                    },
                    "value": {
                      "element": "number",
                      "content": 1
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Name of the distribution channel"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "name"
                    },
                    "value": {
                      "element": "string",
                      "content": "Company Owned, Dealer Operated"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Unique string identifier of the distribution channel"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "identifier"
                    },
                    "value": {
                      "element": "string",
                      "content": "CODO"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "dataStructure",
          "content": [
            {
              "element": "object",
              "meta": {
                "id": "Error400"
              },
              "content": [
                {
                  "element": "member",
                  "meta": {
                    "description": "Short, human-readable summary of the error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "title"
                    },
                    "value": {
                      "element": "string",
                      "content": "Bad Request"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Human-readable explanation for this specific error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "message"
                    },
                    "value": {
                      "element": "string",
                      "content": "The requested resource could not be found"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "HTTP status code generated by the origin server"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "status"
                    },
                    "value": {
                      "element": "number",
                      "content": 400
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "dataStructure",
          "content": [
            {
              "element": "object",
              "meta": {
                "id": "Error401"
              },
              "content": [
                {
                  "element": "member",
                  "meta": {
                    "description": "Short, human-readable summary of the error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "title"
                    },
                    "value": {
                      "element": "string",
                      "content": "Unauthorized"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Human-readable explanation for this specific error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "message"
                    },
                    "value": {
                      "element": "string",
                      "content": "The requested resource could not be found"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "HTTP status code generated by the origin server"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "status"
                    },
                    "value": {
                      "element": "number",
                      "content": 401
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "dataStructure",
          "content": [
            {
              "element": "object",
              "meta": {
                "id": "Error404"
              },
              "content": [
                {
                  "element": "member",
                  "meta": {
                    "description": "Short, human-readable summary of the error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "title"
                    },
                    "value": {
                      "element": "string",
                      "content": "Record not found"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Human-readable explanation for this specific error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "message"
                    },
                    "value": {
                      "element": "string",
                      "content": "The requested resource could not be found"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "HTTP status code generated by the origin server"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "status"
                    },
                    "value": {
                      "element": "number",
                      "content": 404
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "dataStructure",
          "content": [
            {
              "element": "object",
              "meta": {
                "id": "Error405"
              },
              "content": [
                {
                  "element": "member",
                  "meta": {
                    "description": "Short, human-readable summary of the error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "title"
                    },
                    "value": {
                      "element": "string",
                      "content": "Method Not Allowed"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Human-readable explanation for this specific error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "message"
                    },
                    "value": {
                      "element": "string",
                      "content": "The method specified in the request is not allowed for this resource"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "HTTP status code generated by the origin server"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "status"
                    },
                    "value": {
                      "element": "number",
                      "content": 405
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "element": "dataStructure",
          "content": [
            {
              "element": "object",
              "meta": {
                "id": "Error500"
              },
              "content": [
                {
                  "element": "member",
                  "meta": {
                    "description": "Short, human-readable summary of the error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "title"
                    },
                    "value": {
                      "element": "string",
                      "content": "Internal Server Error"
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "Human-readable explanation for this specific error"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "message"
                    },
                    "value": {
                      "element": "string",
                      "content": "Whoops, looks like something went wrong."
                    }
                  }
                },
                {
                  "element": "member",
                  "meta": {
                    "description": "HTTP status code generated by the origin server"
                  },
                  "attributes": {
                    "typeAttributes": [
                      "required"
                    ]
                  },
                  "content": {
                    "key": {
                      "element": "string",
                      "content": "status"
                    },
                    "value": {
                      "element": "number",
                      "content": 500
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}