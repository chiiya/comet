{
  "groups": [
    {
      "name": "Account",
      "description": "The account endpoints can be used for everything regarding authentication, authorization,\nand account management. This includes feedback functionality, favorites and statistics retrieval.\nUsers can only retrieve and modify their own data.",
      "groups": [
        {
          "name": "Favorites",
          "description": "Users can add other users to their favorites. This resource represents a list of\nall favorites for the given user.",
          "groups": [],
          "operations": [
            {
              "name": "List Favorites",
              "method": "GET",
              "description": "List all favorites of the given user. As with most other endpoints, users can only request their own\ninformation.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "integer",
                                  "description": "ID of the user"
                                }
                              },
                              "required": [
                                "userId"
                              ]
                            }
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "first": {
                                "type": "string",
                                "description": "Full URL for the first page of results"
                              },
                              "last": {
                                "type": "string",
                                "description": "Full URL for the last page of results"
                              },
                              "prev": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Full URL for the previous page of results"
                              },
                              "next": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Full URL for the next page of results"
                              }
                            }
                          },
                          "meta": {
                            "type": "object",
                            "properties": {
                              "current_page": {
                                "type": "integer",
                                "description": "Current page number"
                              },
                              "from": {
                                "type": "integer",
                                "description": "Number of first entry for current page"
                              },
                              "last_page": {
                                "type": "integer",
                                "description": "Last page number"
                              },
                              "path": {
                                "type": "string",
                                "description": "Full URL for the resource"
                              },
                              "per_page": {
                                "type": "integer",
                                "description": "Number of entries per page"
                              },
                              "to": {
                                "type": "integer",
                                "description": "Number of last entry for current page"
                              },
                              "total": {
                                "type": "integer",
                                "description": "Total number of entries"
                              }
                            }
                          }
                        }
                      },
                      "examples": [
                        "{\n    \"data\": [\n        {\n            \"userId\": 2\n        },\n        {\n            \"userId\": 4\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://api.dermaduell.de/api/users/1/favourites?page=1\",\n        \"last\": \"http://api.dermaduell.de/api/users/1/favourites?page=1\",\n        \"prev\": null,\n        \"next\": null\n    },\n    \"meta\": {\n        \"current_page\": 1,\n        \"from\": 1,\n        \"last_page\": 1,\n        \"path\": \"http://api.dermaduell.de/api/users/1/favourites\",\n        \"per_page\": 15,\n        \"to\": 2,\n        \"total\": 2\n    }\n}\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "userId": {
                                      "type": "integer",
                                      "description": "ID of the user"
                                    }
                                  },
                                  "required": [
                                    "userId"
                                  ]
                                }
                              },
                              "links": {
                                "type": "object",
                                "properties": {
                                  "first": {
                                    "type": "string",
                                    "description": "Full URL for the first page of results"
                                  },
                                  "last": {
                                    "type": "string",
                                    "description": "Full URL for the last page of results"
                                  },
                                  "prev": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Full URL for the previous page of results"
                                  },
                                  "next": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Full URL for the next page of results"
                                  }
                                }
                              },
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "current_page": {
                                    "type": "integer",
                                    "description": "Current page number"
                                  },
                                  "from": {
                                    "type": "integer",
                                    "description": "Number of first entry for current page"
                                  },
                                  "last_page": {
                                    "type": "integer",
                                    "description": "Last page number"
                                  },
                                  "path": {
                                    "type": "string",
                                    "description": "Full URL for the resource"
                                  },
                                  "per_page": {
                                    "type": "integer",
                                    "description": "Number of entries per page"
                                  },
                                  "to": {
                                    "type": "integer",
                                    "description": "Number of last entry for current page"
                                  },
                                  "total": {
                                    "type": "integer",
                                    "description": "Total number of entries"
                                  }
                                }
                              }
                            }
                          },
                          "examples": [
                            "{\n    \"data\": [\n        {\n            \"userId\": 2\n        },\n        {\n            \"userId\": 4\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://api.dermaduell.de/api/users/1/favourites?page=1\",\n        \"last\": \"http://api.dermaduell.de/api/users/1/favourites?page=1\",\n        \"prev\": null,\n        \"next\": null\n    },\n    \"meta\": {\n        \"current_page\": 1,\n        \"from\": 1,\n        \"last_page\": 1,\n        \"path\": \"http://api.dermaduell.de/api/users/1/favourites\",\n        \"per_page\": 15,\n        \"to\": 2,\n        \"total\": 2\n    }\n}\n"
                          ]
                        }
                      },
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/favourites"
            },
            {
              "name": "Store Favorite",
              "method": "POST",
              "description": "Add a new user to the requesting user's favorites.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "Content-Type",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {
                  "application/json": {
                    "mediaType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer",
                          "description": "ID of the user that should be added to the favorites"
                        }
                      },
                      "required": [
                        "userId"
                      ]
                    },
                    "examples": [
                      "{\n    \"userId\": 3\n}\n"
                    ]
                  }
                }
              },
              "responses": {
                "201": {
                  "statusCode": 201,
                  "headers": [],
                  "body": {},
                  "description": "Successfully added user to the favorites list."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "Content-Type",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {
                      "application/json": {
                        "mediaType": "application/json",
                        "schema": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "integer",
                              "description": "ID of the user that should be added to the favorites"
                            }
                          },
                          "required": [
                            "userId"
                          ]
                        },
                        "examples": [
                          "{\n    \"userId\": 3\n}\n"
                        ]
                      }
                    }
                  },
                  "responses": {
                    "201": {
                      "statusCode": 201,
                      "headers": [],
                      "body": {},
                      "description": "Successfully added user to the favorites list."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/favourites"
            },
            {
              "name": "Check Status",
              "method": "HEAD",
              "description": "Check whether a user has another user in their favourites. Will return a `204`\nresponse if the user is a favorite, and a `404` response if he is not.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "favId",
                  "description": "ID of the other user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "204": {
                  "statusCode": 204,
                  "headers": [],
                  "body": {},
                  "description": "User is a favorite."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "404": {
                  "statusCode": 404,
                  "headers": [],
                  "body": {},
                  "description": "User is **not** a favorite."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "204": {
                      "statusCode": 204,
                      "headers": [],
                      "body": {},
                      "description": "User is a favorite."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "404": {
                      "statusCode": 404,
                      "headers": [],
                      "body": {},
                      "description": "User is **not** a favorite."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/favourites/{favId}"
            },
            {
              "name": "Remove Favorite",
              "method": "DELETE",
              "description": "Delete a favorite entry, by user ID.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "favId",
                  "description": "ID of the other user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "204": {
                  "statusCode": 204,
                  "headers": [],
                  "body": {},
                  "description": "Successfully deleted the favorite entry."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "204": {
                      "statusCode": 204,
                      "headers": [],
                      "body": {},
                      "description": "Successfully deleted the favorite entry."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/favourites/{favId}"
            }
          ]
        },
        {
          "name": "Users",
          "description": "Resource representing a list of all users.",
          "groups": [],
          "operations": [
            {
              "name": "Search Users",
              "method": "GET",
              "description": "Search for a user by username. The query parameter `s` is required.",
              "parameters": [
                {
                  "location": "query",
                  "name": "s",
                  "description": "Search string",
                  "required": true,
                  "example": "mad",
                  "deprecated": false,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uid": {
                              "type": "integer",
                              "description": "ID of the user",
                              "examples": [
                                115
                              ]
                            },
                            "dd_nickname": {
                              "type": "string",
                              "description": "(Unique) nickname of the user",
                              "examples": [
                                "johnston.mathew"
                              ]
                            },
                            "dd_image": {
                              "type": "string",
                              "description": "URL of the user's avatar",
                              "examples": [
                                "https://www.dermaduell.de/user_images/1.jpg"
                              ]
                            }
                          },
                          "required": [
                            "uid",
                            "dd_nickname",
                            "dd_image"
                          ]
                        }
                      },
                      "examples": [
                        "[\n    {\n        \"uid\": 120,\n        \"dd_nickname\": \"madge.mclaughlin\",\n        \"dd_image\": \"https://www.dermaduell.de/user_images/1.jpg\"\n    }\n]\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "422": {
                  "statusCode": 422,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "examples": [
                              "The given data was invalid."
                            ],
                            "description": "Error description"
                          },
                          "errors": {
                            "type": "object",
                            "description": "Validation errors. Each key on the object corresponds to a submitted field with errors"
                          }
                        },
                        "required": [
                          "message",
                          "errors"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"s\": [\n            \"The s field is required.\"\n        ]\n    }\n}\n"
                      ]
                    }
                  },
                  "description": "Missing query parameter `s`."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "uid": {
                                  "type": "integer",
                                  "description": "ID of the user",
                                  "examples": [
                                    115
                                  ]
                                },
                                "dd_nickname": {
                                  "type": "string",
                                  "description": "(Unique) nickname of the user",
                                  "examples": [
                                    "johnston.mathew"
                                  ]
                                },
                                "dd_image": {
                                  "type": "string",
                                  "description": "URL of the user's avatar",
                                  "examples": [
                                    "https://www.dermaduell.de/user_images/1.jpg"
                                  ]
                                }
                              },
                              "required": [
                                "uid",
                                "dd_nickname",
                                "dd_image"
                              ]
                            }
                          },
                          "examples": [
                            "[\n    {\n        \"uid\": 120,\n        \"dd_nickname\": \"madge.mclaughlin\",\n        \"dd_image\": \"https://www.dermaduell.de/user_images/1.jpg\"\n    }\n]\n"
                          ]
                        }
                      },
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "422": {
                      "statusCode": 422,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "examples": [
                                  "The given data was invalid."
                                ],
                                "description": "Error description"
                              },
                              "errors": {
                                "type": "object",
                                "description": "Validation errors. Each key on the object corresponds to a submitted field with errors"
                              }
                            },
                            "required": [
                              "message",
                              "errors"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"s\": [\n            \"The s field is required.\"\n        ]\n    }\n}\n"
                          ]
                        }
                      },
                      "description": "Missing query parameter `s`."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users"
            },
            {
              "name": "Show User",
              "method": "GET",
              "description": "Show information about a given user. When requesting information about other users, only\nthe `userId`, `nickname`, `picture` and `is_favourite` attributes will be included in the response.\nIf the user is requesting his own information, the response will also contain\npersonal and ranking data. It will **not** include the `is_favourite` attribute in that case.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "integer",
                            "examples": [
                              1
                            ],
                            "description": "ID of the user"
                          },
                          "nickname": {
                            "type": "string",
                            "description": "(Unique) nickname of the user",
                            "examples": [
                              "vfriesen"
                            ]
                          },
                          "picture": {
                            "type": "string",
                            "description": "URL of the user's avatar",
                            "examples": [
                              "https://www.dermaduell.de/user_images/1.jpg"
                            ]
                          },
                          "is_favourite": {
                            "type": "boolean",
                            "description": "Boolean flag indicating whether this user is in the favorites list of the requesting user"
                          },
                          "email": {
                            "type": "string",
                            "examples": [
                              "marian.wisoky@example.org"
                            ]
                          },
                          "first_name": {
                            "type": "string",
                            "examples": [
                              "Peter"
                            ]
                          },
                          "authToken": {
                            "type": "string",
                            "description": "API token used for all requests",
                            "examples": [
                              "03050754139588a25eb3ea85b8647602"
                            ]
                          },
                          "pharmacy": {
                            "type": "string",
                            "description": "Name of the pharmacy the user belongs to",
                            "examples": [
                              "Creola Beatty"
                            ]
                          },
                          "rank": {
                            "type": "integer",
                            "description": "Rank on the global leader board",
                            "examples": [
                              235
                            ]
                          },
                          "intermediateRank": {
                            "type": "integer",
                            "description": "Real rank of the user, ignoring duplicate ranks (i.e. two users with the same amount of games won will only count once instead of twice)",
                            "examples": [
                              171
                            ]
                          },
                          "wonGamesForPremiumPoints": {
                            "type": "integer",
                            "description": "Amount of games won that are eligible for premium points (capped at 100)",
                            "examples": [
                              84
                            ]
                          },
                          "maxPremiumPointsPerMonth": {
                            "type": "integer",
                            "description": "Maximum amount of premium points awarded per month for won games",
                            "examples": [
                              200
                            ]
                          },
                          "incPremiumPointsPerWonStreak": {
                            "type": "integer",
                            "description": "Amount of points the user is awarded for every 10 wins",
                            "examples": [
                              20
                            ]
                          }
                        },
                        "required": [
                          "userId",
                          "nickname",
                          "picture"
                        ]
                      },
                      "examples": [
                        "{\n    \"userId\": 1,\n    \"nickname\": \"lorena17\",\n    \"picture\": \"https://www.dermaduell.de/user_images/1.jpg\",\n    \"email\": \"xyz@example.org\",\n    \"authToken\": \"4cde42b9f20e5ca0b123d9be8a9e5510\",\n    \"pharmacy\": \"Anjali Simonis\",\n    \"rank\": 175,\n    \"intermediateRank\": 5,\n    \"wonGamesForPremiumPoints\": 1,\n    \"maxPremiumPointsPerMonth\": 200,\n    \"incPremiumPointsPerWonStreak\": 20\n}\n"
                      ]
                    }
                  }
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "404": {
                  "statusCode": 404,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": [
                        "[]\n"
                      ]
                    }
                  },
                  "description": "Resource could not be found."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "integer",
                                "examples": [
                                  1
                                ],
                                "description": "ID of the user"
                              },
                              "nickname": {
                                "type": "string",
                                "description": "(Unique) nickname of the user",
                                "examples": [
                                  "vfriesen"
                                ]
                              },
                              "picture": {
                                "type": "string",
                                "description": "URL of the user's avatar",
                                "examples": [
                                  "https://www.dermaduell.de/user_images/1.jpg"
                                ]
                              },
                              "is_favourite": {
                                "type": "boolean",
                                "description": "Boolean flag indicating whether this user is in the favorites list of the requesting user"
                              },
                              "email": {
                                "type": "string",
                                "examples": [
                                  "marian.wisoky@example.org"
                                ]
                              },
                              "first_name": {
                                "type": "string",
                                "examples": [
                                  "Peter"
                                ]
                              },
                              "authToken": {
                                "type": "string",
                                "description": "API token used for all requests",
                                "examples": [
                                  "03050754139588a25eb3ea85b8647602"
                                ]
                              },
                              "pharmacy": {
                                "type": "string",
                                "description": "Name of the pharmacy the user belongs to",
                                "examples": [
                                  "Creola Beatty"
                                ]
                              },
                              "rank": {
                                "type": "integer",
                                "description": "Rank on the global leader board",
                                "examples": [
                                  235
                                ]
                              },
                              "intermediateRank": {
                                "type": "integer",
                                "description": "Real rank of the user, ignoring duplicate ranks (i.e. two users with the same amount of games won will only count once instead of twice)",
                                "examples": [
                                  171
                                ]
                              },
                              "wonGamesForPremiumPoints": {
                                "type": "integer",
                                "description": "Amount of games won that are eligible for premium points (capped at 100)",
                                "examples": [
                                  84
                                ]
                              },
                              "maxPremiumPointsPerMonth": {
                                "type": "integer",
                                "description": "Maximum amount of premium points awarded per month for won games",
                                "examples": [
                                  200
                                ]
                              },
                              "incPremiumPointsPerWonStreak": {
                                "type": "integer",
                                "description": "Amount of points the user is awarded for every 10 wins",
                                "examples": [
                                  20
                                ]
                              }
                            },
                            "required": [
                              "userId",
                              "nickname",
                              "picture"
                            ]
                          },
                          "examples": [
                            "{\n    \"userId\": 1,\n    \"nickname\": \"lorena17\",\n    \"picture\": \"https://www.dermaduell.de/user_images/1.jpg\",\n    \"email\": \"xyz@example.org\",\n    \"authToken\": \"4cde42b9f20e5ca0b123d9be8a9e5510\",\n    \"pharmacy\": \"Anjali Simonis\",\n    \"rank\": 175,\n    \"intermediateRank\": 5,\n    \"wonGamesForPremiumPoints\": 1,\n    \"maxPremiumPointsPerMonth\": 200,\n    \"incPremiumPointsPerWonStreak\": 20\n}\n"
                          ]
                        }
                      }
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "404": {
                      "statusCode": 404,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": [
                            "[]\n"
                          ]
                        }
                      },
                      "description": "Resource could not be found."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}"
            },
            {
              "name": "Update User",
              "method": "PUT",
              "description": "Update the user's information. If the new nickname is already in use,\na `409` response will be returned.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "Content-Type",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {
                  "application/json": {
                    "mediaType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "nickname": {
                          "type": "string",
                          "examples": [
                            "vfriesen"
                          ],
                          "description": "New nickname. Must be unique"
                        },
                        "picture": {
                          "type": "string",
                          "examples": [
                            "data:image/jpeg;base64,..."
                          ],
                          "description": "Base64-encoded image"
                        }
                      },
                      "required": [
                        "nickname"
                      ]
                    },
                    "examples": [
                      "{\n    \"nickname\": \"peter\",\n    \"picture\": \"data:image/jpeg;base64,...\"\n}\n"
                    ]
                  }
                }
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {},
                  "description": "Successfully updated the user."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "409": {
                  "statusCode": 409,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": []
                    }
                  },
                  "description": "Nickname already in use."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "Content-Type",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {
                      "application/json": {
                        "mediaType": "application/json",
                        "schema": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                            "nickname": {
                              "type": "string",
                              "examples": [
                                "vfriesen"
                              ],
                              "description": "New nickname. Must be unique"
                            },
                            "picture": {
                              "type": "string",
                              "examples": [
                                "data:image/jpeg;base64,..."
                              ],
                              "description": "Base64-encoded image"
                            }
                          },
                          "required": [
                            "nickname"
                          ]
                        },
                        "examples": [
                          "{\n    \"nickname\": \"peter\",\n    \"picture\": \"data:image/jpeg;base64,...\"\n}\n"
                        ]
                      }
                    }
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {},
                      "description": "Successfully updated the user."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "409": {
                      "statusCode": 409,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": []
                        }
                      },
                      "description": "Nickname already in use."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}"
            }
          ]
        }
      ],
      "operations": [
        {
          "name": "Login User",
          "method": "POST",
          "description": "Login a user using his credentials and retrieve the API token. The `DD-Credentials` header must contain the\nbase64-encoded username and password of the user, separated by a colon. The header should have the following\nformat: `base64(username):base64(password)`",
          "parameters": [],
          "request": {
            "headers": [
              {
                "name": "DD-Credentials",
                "example": "<base64-encoded-credentials>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {}
          },
          "responses": {
            "200": {
              "statusCode": 200,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "examples": [
                          1
                        ],
                        "description": "ID of the user"
                      },
                      "nickname": {
                        "type": "string",
                        "examples": [
                          "vfriesen"
                        ]
                      },
                      "picture": {
                        "type": "string",
                        "description": "URL of the user's avatar",
                        "examples": [
                          "https://www.dermaduell.de/user_images/1.jpg"
                        ]
                      },
                      "email": {
                        "type": "string",
                        "examples": [
                          "marian.wisoky@example.org"
                        ]
                      },
                      "first_name": {
                        "type": "string",
                        "examples": [
                          "Peter"
                        ]
                      },
                      "authToken": {
                        "type": "string",
                        "description": "API token used for all requests",
                        "examples": [
                          "03050754139588a25eb3ea85b8647602"
                        ]
                      },
                      "pharmacy": {
                        "type": "string",
                        "description": "Name of the pharmacy the user belongs to",
                        "examples": [
                          "Creola Beatty"
                        ]
                      },
                      "rank": {
                        "type": "integer",
                        "description": "Rank on the global leader board",
                        "examples": [
                          235
                        ]
                      },
                      "intermediateRank": {
                        "type": "integer",
                        "description": "Real rank of the user, ignoring duplicate ranks (i.e. two users with the same amount of games won will only count once instead of twice)",
                        "examples": [
                          171
                        ]
                      },
                      "wonGamesForPremiumPoints": {
                        "type": "integer",
                        "description": "Amount of games won that are eligible for premium points (capped at 100)",
                        "examples": [
                          84
                        ]
                      },
                      "maxPremiumPointsPerMonth": {
                        "type": "integer",
                        "description": "Maximum amount of premium points awarded per month for won games",
                        "examples": [
                          200
                        ]
                      },
                      "incPremiumPointsPerWonStreak": {
                        "type": "integer",
                        "description": "Amount of points the user is awarded for every 10 wins",
                        "examples": [
                          20
                        ]
                      }
                    },
                    "required": [
                      "userId",
                      "nickname",
                      "picture",
                      "email",
                      "first_name",
                      "authToken",
                      "pharmacy",
                      "rank",
                      "intermediateRank",
                      "wonGamesForPremiumPoints",
                      "maxPremiumPointsPerMonth",
                      "incPremiumPointsPerWonStreak"
                    ]
                  },
                  "examples": [
                    "{\n    \"userId\": 1,\n    \"nickname\": \"vfriesen\",\n    \"picture\": \"https://www.dermaduell.de/user_images/1.jpg\",\n    \"email\": \"cordell65@hotmail.com\",\n    \"first_name\": \"Peter\",\n    \"authToken\": \"03050754139588a25eb3ea85b8647602\",\n    \"pharmacy\": \"Creola Beatty\",\n    \"rank\": 235,\n    \"intermediateRank\": 171,\n    \"wonGamesForPremiumPoints\": 84,\n    \"maxPremiumPointsPerMonth\": 200,\n    \"incPremiumPointsPerWonStreak\": 20\n}\n"
                  ]
                }
              }
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "DD-Credentials",
                    "example": "<base64-encoded-credentials>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "integer",
                            "examples": [
                              1
                            ],
                            "description": "ID of the user"
                          },
                          "nickname": {
                            "type": "string",
                            "examples": [
                              "vfriesen"
                            ]
                          },
                          "picture": {
                            "type": "string",
                            "description": "URL of the user's avatar",
                            "examples": [
                              "https://www.dermaduell.de/user_images/1.jpg"
                            ]
                          },
                          "email": {
                            "type": "string",
                            "examples": [
                              "marian.wisoky@example.org"
                            ]
                          },
                          "first_name": {
                            "type": "string",
                            "examples": [
                              "Peter"
                            ]
                          },
                          "authToken": {
                            "type": "string",
                            "description": "API token used for all requests",
                            "examples": [
                              "03050754139588a25eb3ea85b8647602"
                            ]
                          },
                          "pharmacy": {
                            "type": "string",
                            "description": "Name of the pharmacy the user belongs to",
                            "examples": [
                              "Creola Beatty"
                            ]
                          },
                          "rank": {
                            "type": "integer",
                            "description": "Rank on the global leader board",
                            "examples": [
                              235
                            ]
                          },
                          "intermediateRank": {
                            "type": "integer",
                            "description": "Real rank of the user, ignoring duplicate ranks (i.e. two users with the same amount of games won will only count once instead of twice)",
                            "examples": [
                              171
                            ]
                          },
                          "wonGamesForPremiumPoints": {
                            "type": "integer",
                            "description": "Amount of games won that are eligible for premium points (capped at 100)",
                            "examples": [
                              84
                            ]
                          },
                          "maxPremiumPointsPerMonth": {
                            "type": "integer",
                            "description": "Maximum amount of premium points awarded per month for won games",
                            "examples": [
                              200
                            ]
                          },
                          "incPremiumPointsPerWonStreak": {
                            "type": "integer",
                            "description": "Amount of points the user is awarded for every 10 wins",
                            "examples": [
                              20
                            ]
                          }
                        },
                        "required": [
                          "userId",
                          "nickname",
                          "picture",
                          "email",
                          "first_name",
                          "authToken",
                          "pharmacy",
                          "rank",
                          "intermediateRank",
                          "wonGamesForPremiumPoints",
                          "maxPremiumPointsPerMonth",
                          "incPremiumPointsPerWonStreak"
                        ]
                      },
                      "examples": [
                        "{\n    \"userId\": 1,\n    \"nickname\": \"vfriesen\",\n    \"picture\": \"https://www.dermaduell.de/user_images/1.jpg\",\n    \"email\": \"cordell65@hotmail.com\",\n    \"first_name\": \"Peter\",\n    \"authToken\": \"03050754139588a25eb3ea85b8647602\",\n    \"pharmacy\": \"Creola Beatty\",\n    \"rank\": 235,\n    \"intermediateRank\": 171,\n    \"wonGamesForPremiumPoints\": 84,\n    \"maxPremiumPointsPerMonth\": 200,\n    \"incPremiumPointsPerWonStreak\": 20\n}\n"
                      ]
                    }
                  }
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [],
          "uri": "/login"
        },
        {
          "name": "Check Nickname Availability",
          "method": "HEAD",
          "description": "Check whether a given (base64-encoded) nickname is available. A 204 (`No Content`) response is\nreturned in case the nickname is still available. Otherwise a 409 (`Conflict`) response is returned.",
          "parameters": [
            {
              "location": "path",
              "name": "nickname",
              "description": "Base64-encoded nickname",
              "required": true,
              "example": "dmZyaWVzZW4=",
              "deprecated": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request": {
            "headers": [
              {
                "name": "DD-Auth",
                "example": "<token>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {}
          },
          "responses": {
            "204": {
              "statusCode": 204,
              "headers": [],
              "body": {},
              "description": "Nickname is available."
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "409": {
              "statusCode": 409,
              "headers": [],
              "body": {},
              "description": "Nickname is **not** available."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "204": {
                  "statusCode": 204,
                  "headers": [],
                  "body": {},
                  "description": "Nickname is available."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "409": {
                  "statusCode": 409,
                  "headers": [],
                  "body": {},
                  "description": "Nickname is **not** available."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [
            {
              "default": []
            }
          ],
          "uri": "/nickname-available/{nickname}"
        },
        {
          "name": "Update Firebase Token",
          "method": "PUT",
          "description": "Update the user's firebase device registration token.",
          "parameters": [
            {
              "location": "path",
              "name": "id",
              "description": "ID of the user",
              "required": true,
              "example": "1",
              "deprecated": false,
              "schema": {
                "type": "number"
              }
            }
          ],
          "request": {
            "headers": [
              {
                "name": "Content-Type",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "DD-Auth",
                "example": "<token>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {
              "application/json": {
                "mediaType": "application/json",
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "registration_token": {
                      "type": "string",
                      "description": "Firebase device registration token"
                    },
                    "platform": {
                      "type": "string",
                      "description": "Device platform",
                      "enum": [
                        "android",
                        "ios"
                      ]
                    }
                  },
                  "required": [
                    "registration_token"
                  ]
                },
                "examples": [
                  "{\n    \"registration_token\": \"123453425jdfhdsbjhfsdizreewujbr4\",\n    \"platform\": \"android\"\n}\n"
                ]
              }
            }
          },
          "responses": {
            "204": {
              "statusCode": 204,
              "headers": [],
              "body": {},
              "description": "Successfully updated the firebase token."
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "Content-Type",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {
                  "application/json": {
                    "mediaType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "registration_token": {
                          "type": "string",
                          "description": "Firebase device registration token"
                        },
                        "platform": {
                          "type": "string",
                          "description": "Device platform",
                          "enum": [
                            "android",
                            "ios"
                          ]
                        }
                      },
                      "required": [
                        "registration_token"
                      ]
                    },
                    "examples": [
                      "{\n    \"registration_token\": \"123453425jdfhdsbjhfsdizreewujbr4\",\n    \"platform\": \"android\"\n}\n"
                    ]
                  }
                }
              },
              "responses": {
                "204": {
                  "statusCode": 204,
                  "headers": [],
                  "body": {},
                  "description": "Successfully updated the firebase token."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [
            {
              "default": []
            }
          ],
          "uri": "/users/{id}/token"
        },
        {
          "name": "Store Feedback",
          "method": "POST",
          "description": "Store a new feedback entry.",
          "parameters": [
            {
              "location": "path",
              "name": "id",
              "description": "ID of the user",
              "required": true,
              "example": "1",
              "deprecated": false,
              "schema": {
                "type": "number"
              }
            }
          ],
          "request": {
            "headers": [
              {
                "name": "Content-Type",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "DD-Auth",
                "example": "<token>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {
              "application/json": {
                "mediaType": "application/json",
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "mood": {
                      "type": "string",
                      "examples": [
                        "angry"
                      ]
                    },
                    "comment": {
                      "type": "string",
                      "examples": [
                        "Nothing works!"
                      ]
                    },
                    "contactPermissionGranted": {
                      "type": "integer",
                      "examples": [
                        1
                      ]
                    },
                    "dataPermissionGranted": {
                      "type": "integer",
                      "examples": [
                        0
                      ]
                    },
                    "appVersion": {
                      "type": "integer",
                      "examples": [
                        1
                      ]
                    },
                    "browser": {
                      "type": "string",
                      "examples": [
                        "Firefox 46"
                      ]
                    },
                    "deviceModel": {
                      "type": "string",
                      "examples": [
                        "Device"
                      ]
                    },
                    "devicePlatform": {
                      "type": "string",
                      "examples": [
                        "Platform"
                      ]
                    },
                    "devicePlatformVersion": {
                      "type": "string",
                      "examples": [
                        "Version"
                      ]
                    }
                  },
                  "required": [
                    "mood",
                    "comment",
                    "contactPermissionGranted",
                    "dataPermissionGranted",
                    "appVersion"
                  ]
                },
                "examples": [
                  "{\n    \"mood\": \"angry\",\n    \"comment\": \"Nothing works!\",\n    \"contactPermissionGranted\": 1,\n    \"dataPermissionGranted\": 1,\n    \"appVersion\": 1,\n    \"browser\": \"A\",\n    \"deviceModel\": \"B\",\n    \"devicePlatform\": \"C\",\n    \"devicePlatformVersion\": \"D\"\n}\n"
                ]
              }
            }
          },
          "responses": {
            "201": {
              "statusCode": 201,
              "headers": [],
              "body": {},
              "description": "Feedback stored successfully."
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "Content-Type",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {
                  "application/json": {
                    "mediaType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "mood": {
                          "type": "string",
                          "examples": [
                            "angry"
                          ]
                        },
                        "comment": {
                          "type": "string",
                          "examples": [
                            "Nothing works!"
                          ]
                        },
                        "contactPermissionGranted": {
                          "type": "integer",
                          "examples": [
                            1
                          ]
                        },
                        "dataPermissionGranted": {
                          "type": "integer",
                          "examples": [
                            0
                          ]
                        },
                        "appVersion": {
                          "type": "integer",
                          "examples": [
                            1
                          ]
                        },
                        "browser": {
                          "type": "string",
                          "examples": [
                            "Firefox 46"
                          ]
                        },
                        "deviceModel": {
                          "type": "string",
                          "examples": [
                            "Device"
                          ]
                        },
                        "devicePlatform": {
                          "type": "string",
                          "examples": [
                            "Platform"
                          ]
                        },
                        "devicePlatformVersion": {
                          "type": "string",
                          "examples": [
                            "Version"
                          ]
                        }
                      },
                      "required": [
                        "mood",
                        "comment",
                        "contactPermissionGranted",
                        "dataPermissionGranted",
                        "appVersion"
                      ]
                    },
                    "examples": [
                      "{\n    \"mood\": \"angry\",\n    \"comment\": \"Nothing works!\",\n    \"contactPermissionGranted\": 1,\n    \"dataPermissionGranted\": 1,\n    \"appVersion\": 1,\n    \"browser\": \"A\",\n    \"deviceModel\": \"B\",\n    \"devicePlatform\": \"C\",\n    \"devicePlatformVersion\": \"D\"\n}\n"
                    ]
                  }
                }
              },
              "responses": {
                "201": {
                  "statusCode": 201,
                  "headers": [],
                  "body": {},
                  "description": "Feedback stored successfully."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [
            {
              "default": []
            }
          ],
          "uri": "/users/{id}/feedback"
        },
        {
          "name": "Show Statistics",
          "method": "GET",
          "description": "Display stats for the requesting user.",
          "parameters": [
            {
              "location": "path",
              "name": "id",
              "description": "ID of the user",
              "required": true,
              "example": "1",
              "deprecated": false,
              "schema": {
                "type": "number"
              }
            }
          ],
          "request": {
            "headers": [
              {
                "name": "DD-Auth",
                "example": "<token>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {}
          },
          "responses": {
            "200": {
              "statusCode": 200,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "rank": {
                        "type": "integer",
                        "examples": [
                          235
                        ],
                        "description": "Rank on the global leader board"
                      },
                      "intermediateRank": {
                        "type": "integer",
                        "examples": [
                          171
                        ],
                        "description": "Real rank of the user, ignoring duplicate ranks (i.e. two users with the same amount of games won will only count once instead of twice)"
                      },
                      "rankingTopTen": {
                        "type": "array",
                        "description": "Global top 10 rankings",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rank": {
                              "type": "integer",
                              "description": "Rank on the global leader board",
                              "examples": [
                                1
                              ]
                            },
                            "wonGames": {
                              "type": "integer",
                              "description": "Total number of games won",
                              "examples": [
                                499
                              ]
                            },
                            "nickname": {
                              "type": "string",
                              "description": "Nickname of the user",
                              "examples": [
                                "peter"
                              ]
                            },
                            "uid": {
                              "type": "integer",
                              "description": "ID of the user",
                              "examples": [
                                1
                              ]
                            }
                          },
                          "required": [
                            "rank",
                            "wonGames",
                            "nickname",
                            "uid"
                          ]
                        }
                      },
                      "plusMinus5Rank": {
                        "type": "array",
                        "description": "Users ranking 5 places below, and 5 places above the user. Ranked from bottom to top, including the user himself",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rank": {
                              "type": "integer",
                              "description": "Rank on the global leader board",
                              "examples": 234
                            },
                            "wonGames": {
                              "type": "integer",
                              "description": "Total number of games won",
                              "examples": [
                                4
                              ]
                            },
                            "nickname": {
                              "type": "string",
                              "description": "Nickname of the user",
                              "examples": [
                                "faustino14"
                              ]
                            },
                            "uid": {
                              "type": "integer",
                              "description": "ID of the user",
                              "examples": 144
                            }
                          },
                          "required": [
                            "rank",
                            "wonGames",
                            "nickname",
                            "uid"
                          ]
                        }
                      },
                      "gameOutcomes": {
                        "type": "object",
                        "description": "Data on game outcomes",
                        "properties": {
                          "won": {
                            "type": "integer",
                            "description": "Total number of games won by the user",
                            "examples": [
                              4
                            ]
                          },
                          "lost": {
                            "type": "integer",
                            "description": "Total number of games lost by the user",
                            "examples": [
                              1
                            ]
                          },
                          "draw": {
                            "type": "integer",
                            "description": "Total number of games drawn by the user",
                            "examples": [
                              3
                            ]
                          }
                        },
                        "required": [
                          "won",
                          "lost",
                          "draw"
                        ]
                      },
                      "categoriesPlayed": {
                        "type": "array",
                        "description": "List of all categories that the user has answered questions for",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the category",
                              "examples": [
                                "Sonnenschutz"
                              ]
                            },
                            "count": {
                              "type": "integer",
                              "description": "Number of rounds played for this category",
                              "examples": [
                                10
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "count"
                          ]
                        }
                      }
                    },
                    "required": [
                      "rank",
                      "intermediateRank",
                      "rankingTopTen",
                      "plusMinus5Rank",
                      "gameOutcomes",
                      "categoriesPlayed"
                    ]
                  },
                  "examples": [
                    "{\n    \"rank\": 175\n}\n"
                  ]
                }
              }
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "rank": {
                            "type": "integer",
                            "examples": [
                              235
                            ],
                            "description": "Rank on the global leader board"
                          },
                          "intermediateRank": {
                            "type": "integer",
                            "examples": [
                              171
                            ],
                            "description": "Real rank of the user, ignoring duplicate ranks (i.e. two users with the same amount of games won will only count once instead of twice)"
                          },
                          "rankingTopTen": {
                            "type": "array",
                            "description": "Global top 10 rankings",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rank": {
                                  "type": "integer",
                                  "description": "Rank on the global leader board",
                                  "examples": [
                                    1
                                  ]
                                },
                                "wonGames": {
                                  "type": "integer",
                                  "description": "Total number of games won",
                                  "examples": [
                                    499
                                  ]
                                },
                                "nickname": {
                                  "type": "string",
                                  "description": "Nickname of the user",
                                  "examples": [
                                    "peter"
                                  ]
                                },
                                "uid": {
                                  "type": "integer",
                                  "description": "ID of the user",
                                  "examples": [
                                    1
                                  ]
                                }
                              },
                              "required": [
                                "rank",
                                "wonGames",
                                "nickname",
                                "uid"
                              ]
                            }
                          },
                          "plusMinus5Rank": {
                            "type": "array",
                            "description": "Users ranking 5 places below, and 5 places above the user. Ranked from bottom to top, including the user himself",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rank": {
                                  "type": "integer",
                                  "description": "Rank on the global leader board",
                                  "examples": 234
                                },
                                "wonGames": {
                                  "type": "integer",
                                  "description": "Total number of games won",
                                  "examples": [
                                    4
                                  ]
                                },
                                "nickname": {
                                  "type": "string",
                                  "description": "Nickname of the user",
                                  "examples": [
                                    "faustino14"
                                  ]
                                },
                                "uid": {
                                  "type": "integer",
                                  "description": "ID of the user",
                                  "examples": 144
                                }
                              },
                              "required": [
                                "rank",
                                "wonGames",
                                "nickname",
                                "uid"
                              ]
                            }
                          },
                          "gameOutcomes": {
                            "type": "object",
                            "description": "Data on game outcomes",
                            "properties": {
                              "won": {
                                "type": "integer",
                                "description": "Total number of games won by the user",
                                "examples": [
                                  4
                                ]
                              },
                              "lost": {
                                "type": "integer",
                                "description": "Total number of games lost by the user",
                                "examples": [
                                  1
                                ]
                              },
                              "draw": {
                                "type": "integer",
                                "description": "Total number of games drawn by the user",
                                "examples": [
                                  3
                                ]
                              }
                            },
                            "required": [
                              "won",
                              "lost",
                              "draw"
                            ]
                          },
                          "categoriesPlayed": {
                            "type": "array",
                            "description": "List of all categories that the user has answered questions for",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the category",
                                  "examples": [
                                    "Sonnenschutz"
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "description": "Number of rounds played for this category",
                                  "examples": [
                                    10
                                  ]
                                }
                              },
                              "required": [
                                "name",
                                "count"
                              ]
                            }
                          }
                        },
                        "required": [
                          "rank",
                          "intermediateRank",
                          "rankingTopTen",
                          "plusMinus5Rank",
                          "gameOutcomes",
                          "categoriesPlayed"
                        ]
                      },
                      "examples": [
                        "{\n    \"rank\": 175\n}\n"
                      ]
                    }
                  }
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [
            {
              "default": []
            }
          ],
          "uri": "/users/{id}/statistics"
        }
      ]
    },
    {
      "name": "Achievements",
      "description": "The achievement endpoints will return information on achievements completed by\nthe user. Achievements may be unlocked by completing certain challenges, such as\nanswering all questions for a given category. Users can track their progress towards\ncompleting an achievement, and will unlock premium points upon completion.\n\nWhen an achievement is unlocked, a Firebase notification will be sent to the user's\ndevice. For this to work, the Firebase device registration token [will need to be\nset](#users-token-update). The Firebase notifications will then have the following format:\n\n```json\n{\n    \"message\": {\n        \"token\": \"bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1...\",\n        \"notification\": {\n            \"title\": \"Trophäe freigeschaltet: Neu hier?\",\n            \"body\": \"Schließen Sie Ihr erstes Spiel ab\"\n        },\n        \"data\": {\n            \"achievement_id\": \"1\"\n        }\n    }\n}\n```",
      "groups": [],
      "operations": [
        {
          "name": "List Achievement Groups",
          "method": "GET",
          "description": "List all available achievement groups.\n\n### Filters\n\nThis endpoint has JSON-API filters enabled, and may use any of the following filters:\n\n| Filter  | Values |\n|----- | ----------- |\n|`include` | `achievements` |",
          "parameters": [
            {
              "location": "query",
              "name": "include",
              "description": "Relationships to include in the response",
              "required": false,
              "example": "achievements",
              "deprecated": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "request": {
            "headers": [
              {
                "name": "DD-Auth",
                "example": "<token>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {}
          },
          "responses": {
            "200": {
              "statusCode": 200,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Unique ID"
                        },
                        "name": {
                          "type": "string"
                        },
                        "color": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Hexadecimal color code"
                        },
                        "sorting": {
                          "type": "integer",
                          "description": "Integer indicating the (ascending) sorting order. Multiple entries may have the same sorting order, in which case they should be sorted alphabetically"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "sorting"
                      ]
                    }
                  },
                  "examples": [
                    "[\n    {\n        \"id\": 1,\n        \"name\": \"Startschuss\",\n        \"color\": \"#7f9311\",\n        \"sorting\": 1\n    },\n    {\n        \"id\": 2,\n        \"name\": \"A-Derma\",\n        \"color\": \"#d9f957\",\n        \"sorting\": 2\n    }\n]\n"
                  ]
                }
              },
              "description": "Successful response."
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Unique ID"
                            },
                            "name": {
                              "type": "string"
                            },
                            "color": {
                              "type": [
                                "null",
                                "string"
                              ],
                              "description": "Hexadecimal color code"
                            },
                            "sorting": {
                              "type": "integer",
                              "description": "Integer indicating the (ascending) sorting order. Multiple entries may have the same sorting order, in which case they should be sorted alphabetically"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "sorting"
                          ]
                        }
                      },
                      "examples": [
                        "[\n    {\n        \"id\": 1,\n        \"name\": \"Startschuss\",\n        \"color\": \"#7f9311\",\n        \"sorting\": 1\n    },\n    {\n        \"id\": 2,\n        \"name\": \"A-Derma\",\n        \"color\": \"#d9f957\",\n        \"sorting\": 2\n    }\n]\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [
            {
              "default": []
            }
          ],
          "uri": "/achievement-groups"
        },
        {
          "name": "List Achievements",
          "method": "GET",
          "description": "List all available achievements.",
          "parameters": [],
          "request": {
            "headers": [
              {
                "name": "DD-Auth",
                "example": "<token>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {}
          },
          "responses": {
            "200": {
              "statusCode": 200,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Unique ID"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "icon": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "URL of the achievement icon"
                        },
                        "points": {
                          "type": "integer",
                          "description": "Amount of premium points awarded for completing the achievement"
                        },
                        "goal": {
                          "type": "integer",
                          "description": "Numeric goal necessary to reach this achievement"
                        },
                        "sorting": {
                          "type": "integer",
                          "description": "Integer indicating the (ascending) sorting order. Multiple entries may have the same sorting order, in which case they should be sorted alphabetically"
                        },
                        "group_id": {
                          "type": "integer",
                          "description": "ID of the group the achievement belongs to"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "icon",
                        "points",
                        "sorting",
                        "goal",
                        "group_id"
                      ]
                    }
                  },
                  "examples": [
                    "[\n    {\n        \"id\": 1,\n        \"name\": \"Neu hier?\",\n        \"slug\": \"first-game\",\n        \"description\": \"Schließen Sie Ihr erstes Spiel ab\",\n        \"icon\": null,\n        \"points\": 10,\n        \"goal\": 1,\n        \"sorting\": 0,\n        \"group_id\": 1\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Gewonnen\",\n        \"slug\": \"first-win\",\n        \"description\": \"Gewinnen Sie Ihr erstes Spiel\",\n        \"icon\": null,\n        \"points\": 15,\n        \"goal\": 1,\n        \"sorting\": 0,\n        \"group_id\": 1\n    }\n]\n"
                  ]
                }
              },
              "description": "Successful response."
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Unique ID"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "icon": {
                              "type": [
                                "null",
                                "string"
                              ],
                              "description": "URL of the achievement icon"
                            },
                            "points": {
                              "type": "integer",
                              "description": "Amount of premium points awarded for completing the achievement"
                            },
                            "goal": {
                              "type": "integer",
                              "description": "Numeric goal necessary to reach this achievement"
                            },
                            "sorting": {
                              "type": "integer",
                              "description": "Integer indicating the (ascending) sorting order. Multiple entries may have the same sorting order, in which case they should be sorted alphabetically"
                            },
                            "group_id": {
                              "type": "integer",
                              "description": "ID of the group the achievement belongs to"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "icon",
                            "points",
                            "sorting",
                            "goal",
                            "group_id"
                          ]
                        }
                      },
                      "examples": [
                        "[\n    {\n        \"id\": 1,\n        \"name\": \"Neu hier?\",\n        \"slug\": \"first-game\",\n        \"description\": \"Schließen Sie Ihr erstes Spiel ab\",\n        \"icon\": null,\n        \"points\": 10,\n        \"goal\": 1,\n        \"sorting\": 0,\n        \"group_id\": 1\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Gewonnen\",\n        \"slug\": \"first-win\",\n        \"description\": \"Gewinnen Sie Ihr erstes Spiel\",\n        \"icon\": null,\n        \"points\": 15,\n        \"goal\": 1,\n        \"sorting\": 0,\n        \"group_id\": 1\n    }\n]\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [
            {
              "default": []
            }
          ],
          "uri": "/achievements"
        },
        {
          "name": "List User Achievements",
          "method": "GET",
          "description": "List all achievements and their progress for the requesting user. Similar to\nthe request above, but it will also mark completed achievements and include\nthe current progress.",
          "parameters": [
            {
              "location": "path",
              "name": "id",
              "description": "ID of the requesting user",
              "required": true,
              "example": "1",
              "deprecated": false,
              "schema": {
                "type": "number"
              }
            }
          ],
          "request": {
            "headers": [
              {
                "name": "DD-Auth",
                "example": "<token>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {}
          },
          "responses": {
            "200": {
              "statusCode": 200,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Unique ID"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "icon": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "URL of the achievement icon"
                        },
                        "points": {
                          "type": "integer",
                          "description": "Amount of premium points awarded for completing the achievement"
                        },
                        "goal": {
                          "type": "integer",
                          "description": "Numeric goal necessary to reach this achievement"
                        },
                        "sorting": {
                          "type": "integer",
                          "description": "Integer indicating the (ascending) sorting order. Multiple entries may have the same sorting order, in which case they should be sorted alphabetically"
                        },
                        "progress": {
                          "type": "integer",
                          "description": "Current progress by the user towards the numeric goal"
                        },
                        "completed": {
                          "type": "boolean",
                          "description": "Indicates whether the achievement has been completed by the user"
                        },
                        "group_id": {
                          "type": "integer",
                          "description": "ID of the group the achievement belongs to"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "icon",
                        "points",
                        "sorting",
                        "goal",
                        "progress",
                        "completed",
                        "group_id"
                      ]
                    }
                  },
                  "examples": [
                    "[\n    {\n        \"id\": 3,\n        \"name\": \"Volltreffer!\",\n        \"description\": \"Beantworten Sie in einer Kategorie alle 3 Fragen richtig\",\n        \"icon\": null,\n        \"points\": 15,\n        \"goal\": 3,\n        \"sorting\": 0,\n        \"progress\": 3,\n        \"completed\": true,\n        \"group_id\": 1\n    },\n    {\n        \"id\": 56,\n        \"name\": \"Allergiefrei!\",\n        \"description\": \"Geben Sie die richtige Antwort auf alle Fragen der Kategorie „Allergien und empfindliche Haut“\",\n        \"icon\": null,\n        \"points\": 15,\n        \"goal\": 5,\n        \"sorting\": 0,\n        \"progress\": 3,\n        \"completed\": false,\n        \"group_id\": 1\n    }\n]\n"
                  ]
                }
              },
              "description": "Successful response."
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Unique ID"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "icon": {
                              "type": [
                                "null",
                                "string"
                              ],
                              "description": "URL of the achievement icon"
                            },
                            "points": {
                              "type": "integer",
                              "description": "Amount of premium points awarded for completing the achievement"
                            },
                            "goal": {
                              "type": "integer",
                              "description": "Numeric goal necessary to reach this achievement"
                            },
                            "sorting": {
                              "type": "integer",
                              "description": "Integer indicating the (ascending) sorting order. Multiple entries may have the same sorting order, in which case they should be sorted alphabetically"
                            },
                            "progress": {
                              "type": "integer",
                              "description": "Current progress by the user towards the numeric goal"
                            },
                            "completed": {
                              "type": "boolean",
                              "description": "Indicates whether the achievement has been completed by the user"
                            },
                            "group_id": {
                              "type": "integer",
                              "description": "ID of the group the achievement belongs to"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "icon",
                            "points",
                            "sorting",
                            "goal",
                            "progress",
                            "completed",
                            "group_id"
                          ]
                        }
                      },
                      "examples": [
                        "[\n    {\n        \"id\": 3,\n        \"name\": \"Volltreffer!\",\n        \"description\": \"Beantworten Sie in einer Kategorie alle 3 Fragen richtig\",\n        \"icon\": null,\n        \"points\": 15,\n        \"goal\": 3,\n        \"sorting\": 0,\n        \"progress\": 3,\n        \"completed\": true,\n        \"group_id\": 1\n    },\n    {\n        \"id\": 56,\n        \"name\": \"Allergiefrei!\",\n        \"description\": \"Geben Sie die richtige Antwort auf alle Fragen der Kategorie „Allergien und empfindliche Haut“\",\n        \"icon\": null,\n        \"points\": 15,\n        \"goal\": 5,\n        \"sorting\": 0,\n        \"progress\": 3,\n        \"completed\": false,\n        \"group_id\": 1\n    }\n]\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [
            {
              "default": []
            }
          ],
          "uri": "/users/{id}/achievements"
        }
      ]
    },
    {
      "name": "Quiz",
      "description": "The quiz endpoints can be used for starting and requesting quiz games and rounds.\nA quiz (game) takes place between two users over 5 rounds with 3 questions each.\nUsers take turns choosing a category for the questions of a round. Prizes and rewards\ncan be won by winning games or completing challenges.\n\nUsers can also choose to abandon games, whereupon the opponent will receive the win and\nthe abandoning user will not get any points credited. Every 10 games won, a user will\nreceive bounty points that can be redeemed for prizes. Users can directly challenge\nother users, or start a game against a random, available (i.e. also looking for a\nrandom game) opponent.",
      "groups": [
        {
          "name": "Categories",
          "description": "Resource representing a list of all quiz categories.",
          "groups": [],
          "operations": [
            {
              "name": "List Categories",
              "method": "GET",
              "description": "List all available quiz categories.",
              "parameters": [],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uid": {
                              "type": "integer",
                              "description": "Unique ID"
                            },
                            "name": {
                              "type": "string"
                            },
                            "color": {
                              "type": "string",
                              "description": "Color in hex code"
                            },
                            "description": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "uid",
                            "name",
                            "color",
                            "description"
                          ]
                        }
                      },
                      "examples": [
                        "[\n    {\n            \"uid\": 1,\n            \"name\": \"Pierre Fabre Dermo-Kosmetik\",\n            \"color\": \"#7f9311\",\n            \"description\": \"Eos laudantium libero eum [...]\"\n        },\n        {\n            \"uid\": 2,\n            \"name\": \"A-Derma\",\n            \"color\": \"#d9f957\",\n            \"description\": \"Voluptate repudiandae et in [...]\"\n        }\n]\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "uid": {
                                  "type": "integer",
                                  "description": "Unique ID"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "color": {
                                  "type": "string",
                                  "description": "Color in hex code"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "uid",
                                "name",
                                "color",
                                "description"
                              ]
                            }
                          },
                          "examples": [
                            "[\n    {\n            \"uid\": 1,\n            \"name\": \"Pierre Fabre Dermo-Kosmetik\",\n            \"color\": \"#7f9311\",\n            \"description\": \"Eos laudantium libero eum [...]\"\n        },\n        {\n            \"uid\": 2,\n            \"name\": \"A-Derma\",\n            \"color\": \"#d9f957\",\n            \"description\": \"Voluptate repudiandae et in [...]\"\n        }\n]\n"
                          ]
                        }
                      },
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/categories"
            },
            {
              "name": "Show Category",
              "method": "GET",
              "description": "Show details for a given category.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the category",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "integer",
                            "description": "Unique ID"
                          },
                          "name": {
                            "type": "string"
                          },
                          "color": {
                            "type": "string",
                            "description": "Color in hex code"
                          },
                          "description": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "uid",
                          "name",
                          "color",
                          "description"
                        ]
                      },
                      "examples": [
                        "{\n    \"uid\": 5,\n    \"name\": \"Make-Up / Couvrance\",\n    \"color\": \"#a00a6c\",\n    \"description\": \"Quis eos voluptates cumque maiores ipsam [...]\"\n}\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "404": {
                  "statusCode": 404,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": [
                        "[]\n"
                      ]
                    }
                  },
                  "description": "Resource could not be found."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "uid": {
                                "type": "integer",
                                "description": "Unique ID"
                              },
                              "name": {
                                "type": "string"
                              },
                              "color": {
                                "type": "string",
                                "description": "Color in hex code"
                              },
                              "description": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "uid",
                              "name",
                              "color",
                              "description"
                            ]
                          },
                          "examples": [
                            "{\n    \"uid\": 5,\n    \"name\": \"Make-Up / Couvrance\",\n    \"color\": \"#a00a6c\",\n    \"description\": \"Quis eos voluptates cumque maiores ipsam [...]\"\n}\n"
                          ]
                        }
                      },
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "404": {
                      "statusCode": 404,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": [
                            "[]\n"
                          ]
                        }
                      },
                      "description": "Resource could not be found."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/categories/{id}"
            }
          ]
        },
        {
          "name": "Games",
          "description": "Resource representing a list of all quiz games the user is participating in.\nA game can have one of 3 statuses:\n\n| Code | Status | Description |\n|----- | -----------| -----------|\n|`0` | `Active` | Game that both users have participated in, i.e. at least 2 answers. |\n|`1` | `Finished` | Game that was either abandoned or where all 5 rounds (10 answers) have been played |\n|`2` | `New` | Game that was recently started, with 0 or 1 answers. |",
          "groups": [],
          "operations": [
            {
              "name": "List games",
              "method": "GET",
              "description": "List all games the user is participating in, optionally filtered by status. The \n`score` represents the number of correctly answered questions.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "query",
                  "name": "status",
                  "description": "Filter by game status",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number",
                    "enum": [
                      "0",
                      "1",
                      "2"
                    ]
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "uid": {
                                  "type": "integer",
                                  "description": "Unique ID"
                                },
                                "status": {
                                  "type": "number",
                                  "enum": [
                                    0,
                                    1,
                                    2
                                  ],
                                  "description": "Game status (0 = active, 1 = finished, 2 = new)"
                                },
                                "abandoned": {
                                  "type": "integer",
                                  "description": "ID of the user that abandoned the game, or -1 when the game has not been abandoned"
                                },
                                "idOtherUser": {
                                  "type": "integer",
                                  "description": "ID of the opponent. If 0, no opponent is set for this game"
                                },
                                "scoreMe": {
                                  "type": "integer",
                                  "description": "Total score for the requesting user"
                                },
                                "scoreOther": {
                                  "type": "integer",
                                  "description": "Total score for the opponent"
                                },
                                "myTurn": {
                                  "type": "integer",
                                  "enum": [
                                    0,
                                    1
                                  ],
                                  "description": "Boolean flag to indicate whether it's the user's turn (1) or not (0) to create a new round. Will only be present for active and new games"
                                }
                              },
                              "required": [
                                "uid",
                                "status",
                                "abandoned",
                                "idOtherUser",
                                "scoreMe",
                                "scoreOther"
                              ]
                            }
                          },
                          "links": {
                            "type": "object",
                            "properties": {
                              "first": {
                                "type": "string",
                                "description": "Full URL for the first page of results"
                              },
                              "last": {
                                "type": "string",
                                "description": "Full URL for the last page of results"
                              },
                              "prev": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Full URL for the previous page of results"
                              },
                              "next": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Full URL for the next page of results"
                              }
                            }
                          },
                          "meta": {
                            "type": "object",
                            "properties": {
                              "current_page": {
                                "type": "integer",
                                "description": "Current page number"
                              },
                              "from": {
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "description": "Number of first entry for current page"
                              },
                              "last_page": {
                                "type": "integer",
                                "description": "Last page number"
                              },
                              "path": {
                                "type": "string",
                                "description": "Full URL for the resource"
                              },
                              "per_page": {
                                "type": "integer",
                                "description": "Number of entries per page"
                              },
                              "to": {
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "description": "Number of last entry for current page"
                              },
                              "total": {
                                "type": "integer",
                                "description": "Total number of entries"
                              }
                            }
                          }
                        }
                      },
                      "examples": [
                        "{\n    \"data\": [\n        {\n            \"uid\": 6,\n            \"status\": 0,\n            \"abandoned\": -1,\n            \"idOtherUser\": 2,\n            \"scoreMe\": 7,\n            \"scoreOther\": 8,\n            \"myTurn\": 1\n        },\n        {\n            \"uid\": 2,\n            \"status\": 0,\n            \"abandoned\": -1,\n            \"idOtherUser\": 2,\n            \"scoreMe\": 2,\n            \"scoreOther\": 4,\n            \"myTurn\": 0\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://api.dermaduell.de/api/users/1/games?page=1\",\n        \"last\": \"http://api.dermaduell.de/api/users/1/games?page=1\",\n        \"prev\": null,\n        \"next\": null\n    },\n    \"meta\": {\n        \"current_page\": 1,\n        \"from\": 1,\n        \"last_page\": 1,\n        \"path\": \"http://api.dermaduell.de/api/users/1/games\",\n        \"per_page\": 15,\n        \"to\": 2,\n        \"total\": 2\n    }\n}\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "uid": {
                                      "type": "integer",
                                      "description": "Unique ID"
                                    },
                                    "status": {
                                      "type": "number",
                                      "enum": [
                                        0,
                                        1,
                                        2
                                      ],
                                      "description": "Game status (0 = active, 1 = finished, 2 = new)"
                                    },
                                    "abandoned": {
                                      "type": "integer",
                                      "description": "ID of the user that abandoned the game, or -1 when the game has not been abandoned"
                                    },
                                    "idOtherUser": {
                                      "type": "integer",
                                      "description": "ID of the opponent. If 0, no opponent is set for this game"
                                    },
                                    "scoreMe": {
                                      "type": "integer",
                                      "description": "Total score for the requesting user"
                                    },
                                    "scoreOther": {
                                      "type": "integer",
                                      "description": "Total score for the opponent"
                                    },
                                    "myTurn": {
                                      "type": "integer",
                                      "enum": [
                                        0,
                                        1
                                      ],
                                      "description": "Boolean flag to indicate whether it's the user's turn (1) or not (0) to create a new round. Will only be present for active and new games"
                                    }
                                  },
                                  "required": [
                                    "uid",
                                    "status",
                                    "abandoned",
                                    "idOtherUser",
                                    "scoreMe",
                                    "scoreOther"
                                  ]
                                }
                              },
                              "links": {
                                "type": "object",
                                "properties": {
                                  "first": {
                                    "type": "string",
                                    "description": "Full URL for the first page of results"
                                  },
                                  "last": {
                                    "type": "string",
                                    "description": "Full URL for the last page of results"
                                  },
                                  "prev": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Full URL for the previous page of results"
                                  },
                                  "next": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Full URL for the next page of results"
                                  }
                                }
                              },
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "current_page": {
                                    "type": "integer",
                                    "description": "Current page number"
                                  },
                                  "from": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "description": "Number of first entry for current page"
                                  },
                                  "last_page": {
                                    "type": "integer",
                                    "description": "Last page number"
                                  },
                                  "path": {
                                    "type": "string",
                                    "description": "Full URL for the resource"
                                  },
                                  "per_page": {
                                    "type": "integer",
                                    "description": "Number of entries per page"
                                  },
                                  "to": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "description": "Number of last entry for current page"
                                  },
                                  "total": {
                                    "type": "integer",
                                    "description": "Total number of entries"
                                  }
                                }
                              }
                            }
                          },
                          "examples": [
                            "{\n    \"data\": [\n        {\n            \"uid\": 6,\n            \"status\": 0,\n            \"abandoned\": -1,\n            \"idOtherUser\": 2,\n            \"scoreMe\": 7,\n            \"scoreOther\": 8,\n            \"myTurn\": 1\n        },\n        {\n            \"uid\": 2,\n            \"status\": 0,\n            \"abandoned\": -1,\n            \"idOtherUser\": 2,\n            \"scoreMe\": 2,\n            \"scoreOther\": 4,\n            \"myTurn\": 0\n        }\n    ],\n    \"links\": {\n        \"first\": \"http://api.dermaduell.de/api/users/1/games?page=1\",\n        \"last\": \"http://api.dermaduell.de/api/users/1/games?page=1\",\n        \"prev\": null,\n        \"next\": null\n    },\n    \"meta\": {\n        \"current_page\": 1,\n        \"from\": 1,\n        \"last_page\": 1,\n        \"path\": \"http://api.dermaduell.de/api/users/1/games\",\n        \"per_page\": 15,\n        \"to\": 2,\n        \"total\": 2\n    }\n}\n"
                          ]
                        }
                      },
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/games"
            },
            {
              "name": "Create New Game",
              "method": "POST",
              "description": "Create a new game between 2 users, one of them being the requesting user. If an\nalready active game between these 2 users is found, a `409` response is returned.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "Content-Type",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {
                  "application/json": {
                    "mediaType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "idOtherUser": {
                          "type": "number",
                          "examples": [
                            12
                          ],
                          "description": "ID of the opponent the user is challenging"
                        }
                      },
                      "required": [
                        "idOtherUser"
                      ]
                    },
                    "examples": [
                      "{\n    \"idOtherUser\": 12\n}\n"
                    ]
                  }
                }
              },
              "responses": {
                "201": {
                  "statusCode": 201,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "integer",
                            "description": "Unique ID"
                          },
                          "status": {
                            "type": "number",
                            "enum": [
                              0,
                              1,
                              2
                            ],
                            "description": "Game status (0 = active, 1 = finished, 2 = new)"
                          },
                          "abandoned": {
                            "type": "integer",
                            "description": "ID of the user that abandoned the game, or -1 when the game has not been abandoned"
                          },
                          "idOtherUser": {
                            "type": "integer",
                            "description": "ID of the opponent. If 0, no opponent is set for this game"
                          },
                          "scoreMe": {
                            "type": "integer",
                            "description": "Total score for the requesting user"
                          },
                          "scoreOther": {
                            "type": "integer",
                            "description": "Total score for the opponent"
                          },
                          "myTurn": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "description": "Boolean flag to indicate whether it's the user's turn (1) or not (0) to create a new round"
                          }
                        },
                        "required": [
                          "uid",
                          "status",
                          "abandoned",
                          "idOtherUser",
                          "scoreMe",
                          "scoreOther",
                          "myTurn"
                        ]
                      },
                      "examples": [
                        "{\n    \"uid\": 2,\n    \"status\": 0,\n    \"abandoned\": -1,\n    \"idOtherUser\": 2,\n    \"scoreMe\": 2,\n    \"scoreOther\": 4,\n    \"myTurn\": 0\n}\n"
                      ]
                    }
                  },
                  "description": "Successfully created a new game."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "409": {
                  "statusCode": 409,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": [
                        "[]\n"
                      ]
                    }
                  },
                  "description": "Conflict with an existing resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "Content-Type",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {
                      "application/json": {
                        "mediaType": "application/json",
                        "schema": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                            "idOtherUser": {
                              "type": "number",
                              "examples": [
                                12
                              ],
                              "description": "ID of the opponent the user is challenging"
                            }
                          },
                          "required": [
                            "idOtherUser"
                          ]
                        },
                        "examples": [
                          "{\n    \"idOtherUser\": 12\n}\n"
                        ]
                      }
                    }
                  },
                  "responses": {
                    "201": {
                      "statusCode": 201,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "uid": {
                                "type": "integer",
                                "description": "Unique ID"
                              },
                              "status": {
                                "type": "number",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "description": "Game status (0 = active, 1 = finished, 2 = new)"
                              },
                              "abandoned": {
                                "type": "integer",
                                "description": "ID of the user that abandoned the game, or -1 when the game has not been abandoned"
                              },
                              "idOtherUser": {
                                "type": "integer",
                                "description": "ID of the opponent. If 0, no opponent is set for this game"
                              },
                              "scoreMe": {
                                "type": "integer",
                                "description": "Total score for the requesting user"
                              },
                              "scoreOther": {
                                "type": "integer",
                                "description": "Total score for the opponent"
                              },
                              "myTurn": {
                                "type": "integer",
                                "enum": [
                                  0,
                                  1
                                ],
                                "description": "Boolean flag to indicate whether it's the user's turn (1) or not (0) to create a new round"
                              }
                            },
                            "required": [
                              "uid",
                              "status",
                              "abandoned",
                              "idOtherUser",
                              "scoreMe",
                              "scoreOther",
                              "myTurn"
                            ]
                          },
                          "examples": [
                            "{\n    \"uid\": 2,\n    \"status\": 0,\n    \"abandoned\": -1,\n    \"idOtherUser\": 2,\n    \"scoreMe\": 2,\n    \"scoreOther\": 4,\n    \"myTurn\": 0\n}\n"
                          ]
                        }
                      },
                      "description": "Successfully created a new game."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "409": {
                      "statusCode": 409,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": [
                            "[]\n"
                          ]
                        }
                      },
                      "description": "Conflict with an existing resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/games"
            },
            {
              "name": "Show Game",
              "method": "GET",
              "description": "Show details for a given game.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "gameId",
                  "description": "ID of the game",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "integer",
                            "description": "Unique ID"
                          },
                          "status": {
                            "type": "number",
                            "enum": [
                              0,
                              1,
                              2
                            ],
                            "description": "Game status (0 = active, 1 = finished, 2 = new)"
                          },
                          "abandoned": {
                            "type": "integer",
                            "description": "ID of the user that abandoned the game, or -1 when the game has not been abandoned"
                          },
                          "idOtherUser": {
                            "type": "integer",
                            "description": "ID of the opponent. If 0, no opponent is set for this game"
                          },
                          "scoreMe": {
                            "type": "integer",
                            "description": "Total score for the requesting user"
                          },
                          "scoreOther": {
                            "type": "integer",
                            "description": "Total score for the opponent"
                          },
                          "myTurn": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "description": "Boolean flag to indicate whether it's the user's turn (1) or not (0) to create a new round"
                          }
                        },
                        "required": [
                          "uid",
                          "status",
                          "abandoned",
                          "idOtherUser",
                          "scoreMe",
                          "scoreOther",
                          "myTurn"
                        ]
                      },
                      "examples": [
                        "{\n    \"uid\": 2,\n    \"status\": 0,\n    \"abandoned\": -1,\n    \"idOtherUser\": 2,\n    \"scoreMe\": 2,\n    \"scoreOther\": 4,\n    \"myTurn\": 0\n}\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "404": {
                  "statusCode": 404,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": [
                        "[]\n"
                      ]
                    }
                  },
                  "description": "Resource could not be found."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "uid": {
                                "type": "integer",
                                "description": "Unique ID"
                              },
                              "status": {
                                "type": "number",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "description": "Game status (0 = active, 1 = finished, 2 = new)"
                              },
                              "abandoned": {
                                "type": "integer",
                                "description": "ID of the user that abandoned the game, or -1 when the game has not been abandoned"
                              },
                              "idOtherUser": {
                                "type": "integer",
                                "description": "ID of the opponent. If 0, no opponent is set for this game"
                              },
                              "scoreMe": {
                                "type": "integer",
                                "description": "Total score for the requesting user"
                              },
                              "scoreOther": {
                                "type": "integer",
                                "description": "Total score for the opponent"
                              },
                              "myTurn": {
                                "type": "integer",
                                "enum": [
                                  0,
                                  1
                                ],
                                "description": "Boolean flag to indicate whether it's the user's turn (1) or not (0) to create a new round"
                              }
                            },
                            "required": [
                              "uid",
                              "status",
                              "abandoned",
                              "idOtherUser",
                              "scoreMe",
                              "scoreOther",
                              "myTurn"
                            ]
                          },
                          "examples": [
                            "{\n    \"uid\": 2,\n    \"status\": 0,\n    \"abandoned\": -1,\n    \"idOtherUser\": 2,\n    \"scoreMe\": 2,\n    \"scoreOther\": 4,\n    \"myTurn\": 0\n}\n"
                          ]
                        }
                      },
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "404": {
                      "statusCode": 404,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": [
                            "[]\n"
                          ]
                        }
                      },
                      "description": "Resource could not be found."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/games/{gameId}"
            },
            {
              "name": "Abandon Game",
              "method": "PUT",
              "description": "Abandon the given game. Upon abandoning, the opponent will receive the win,\nand the requesting user will not have any of his points awarded.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "gameId",
                  "description": "ID of the game",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {},
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "404": {
                  "statusCode": 404,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": [
                        "[]\n"
                      ]
                    }
                  },
                  "description": "Resource could not be found."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {},
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "404": {
                      "statusCode": 404,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": [
                            "[]\n"
                          ]
                        }
                      },
                      "description": "Resource could not be found."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/games/{gameId}"
            }
          ]
        },
        {
          "name": "Rounds",
          "description": "Resource representing a list of all rounds for a given game.",
          "groups": [],
          "operations": [
            {
              "name": "List rounds",
              "method": "GET",
              "description": "List all rounds for the given game.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "gameId",
                  "description": "ID of the game",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uid": {
                              "type": "integer",
                              "description": "Unique ID"
                            },
                            "categoryId": {
                              "type": "integer",
                              "description": "ID of the round category"
                            },
                            "questions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "question": {
                                    "type": "string"
                                  },
                                  "rightAnswer": {
                                    "type": "string"
                                  },
                                  "wrongAnswers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "picture": {
                                    "type": "string",
                                    "description": "URL for the question icon"
                                  }
                                },
                                "required": [
                                  "question",
                                  "rightAnswer",
                                  "wrongAnswers",
                                  "picture"
                                ]
                              }
                            },
                            "answersOther": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "question_id": {
                                    "type": "number"
                                  },
                                  "is_correct": {
                                    "type": [
                                      "null",
                                      "boolean"
                                    ],
                                    "description": "Indicates whether the given answer was correct. Null when no answer given"
                                  }
                                },
                                "required": [
                                  "question_id",
                                  "is_correct"
                                ]
                              }
                            },
                            "answersMe": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "question_id": {
                                    "type": "number"
                                  },
                                  "is_correct": {
                                    "type": [
                                      "null",
                                      "boolean"
                                    ],
                                    "description": "Indicates whether the given answer was correct. Null when no answer given"
                                  }
                                },
                                "required": [
                                  "question_id",
                                  "is_correct"
                                ]
                              }
                            }
                          },
                          "required": [
                            "uid",
                            "categoryId",
                            "questions",
                            "answersOther",
                            "answersMe"
                          ]
                        }
                      },
                      "examples": [
                        "[\n    {\n        \"uid\": 13,\n        \"categoryId\": 8,\n        \"questions\": [\n            {\n                \"id\": 40,\n                \"question\": \"culpa dolor quo harum nesciunt?\",\n                \"rightAnswer\": \"This is the right answer.\",\n                \"wrongAnswers\": [\n                    \"blanditiis et modi ea ut.\",\n                    \"nisi earum ipsa molestias quis.\",\n                    \"perferendis velit consequatur perferendis harum.\"\n                ],\n                \"picture\": \"http://local.dermaduell.test/corrupti.jpg\"\n            },\n            {\n                \"id\": 29,\n                \"question\": \"aut ea labore iure excepturi?\",\n                \"rightAnswer\": \"This is the right answer.\",\n                \"wrongAnswers\": [\n                    \"eos maiores ea in nobis.\",\n                    \"natus officiis quae iste molestiae.\",\n                    \"mollitia aperiam quia sapiente temporibus.\"\n                ],\n                \"picture\": \"http://local.dermaduell.test/amet.jpg\"\n            },\n            {\n                \"id\": 2,\n                \"question\": \"voluptas qui quos sit voluptas?\",\n                \"rightAnswer\": \"This is the right answer.\",\n                \"wrongAnswers\": [\n                    \"perspiciatis ad totam eos similique.\",\n                    \"aut eum minima odio dolorem.\",\n                    \"quas qui at nihil consequuntur.\"\n                ],\n                \"picture\": \"http://local.dermaduell.test/magnam.jpg\"\n            }\n        ],\n        \"answersMe\": [\n            {\n                \"question_id\": 40,\n                \"is_correct\": false\n            },\n            {\n                \"question_id\": 29,\n                \"is_correct\": false\n            },\n            {\n                \"question_id\": 2,\n                \"is_correct\": false\n            }\n        ],\n        \"answersOther\": [\n            {\n                \"question_id\": 40,\n                \"is_correct\": true\n            },\n            {\n                \"question_id\": 29,\n                \"is_correct\": false\n            },\n            {\n                \"question_id\": 2,\n                \"is_correct\": true\n            }\n        ]\n    } \n]\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "uid": {
                                  "type": "integer",
                                  "description": "Unique ID"
                                },
                                "categoryId": {
                                  "type": "integer",
                                  "description": "ID of the round category"
                                },
                                "questions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "question": {
                                        "type": "string"
                                      },
                                      "rightAnswer": {
                                        "type": "string"
                                      },
                                      "wrongAnswers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "picture": {
                                        "type": "string",
                                        "description": "URL for the question icon"
                                      }
                                    },
                                    "required": [
                                      "question",
                                      "rightAnswer",
                                      "wrongAnswers",
                                      "picture"
                                    ]
                                  }
                                },
                                "answersOther": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "question_id": {
                                        "type": "number"
                                      },
                                      "is_correct": {
                                        "type": [
                                          "null",
                                          "boolean"
                                        ],
                                        "description": "Indicates whether the given answer was correct. Null when no answer given"
                                      }
                                    },
                                    "required": [
                                      "question_id",
                                      "is_correct"
                                    ]
                                  }
                                },
                                "answersMe": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "question_id": {
                                        "type": "number"
                                      },
                                      "is_correct": {
                                        "type": [
                                          "null",
                                          "boolean"
                                        ],
                                        "description": "Indicates whether the given answer was correct. Null when no answer given"
                                      }
                                    },
                                    "required": [
                                      "question_id",
                                      "is_correct"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "uid",
                                "categoryId",
                                "questions",
                                "answersOther",
                                "answersMe"
                              ]
                            }
                          },
                          "examples": [
                            "[\n    {\n        \"uid\": 13,\n        \"categoryId\": 8,\n        \"questions\": [\n            {\n                \"id\": 40,\n                \"question\": \"culpa dolor quo harum nesciunt?\",\n                \"rightAnswer\": \"This is the right answer.\",\n                \"wrongAnswers\": [\n                    \"blanditiis et modi ea ut.\",\n                    \"nisi earum ipsa molestias quis.\",\n                    \"perferendis velit consequatur perferendis harum.\"\n                ],\n                \"picture\": \"http://local.dermaduell.test/corrupti.jpg\"\n            },\n            {\n                \"id\": 29,\n                \"question\": \"aut ea labore iure excepturi?\",\n                \"rightAnswer\": \"This is the right answer.\",\n                \"wrongAnswers\": [\n                    \"eos maiores ea in nobis.\",\n                    \"natus officiis quae iste molestiae.\",\n                    \"mollitia aperiam quia sapiente temporibus.\"\n                ],\n                \"picture\": \"http://local.dermaduell.test/amet.jpg\"\n            },\n            {\n                \"id\": 2,\n                \"question\": \"voluptas qui quos sit voluptas?\",\n                \"rightAnswer\": \"This is the right answer.\",\n                \"wrongAnswers\": [\n                    \"perspiciatis ad totam eos similique.\",\n                    \"aut eum minima odio dolorem.\",\n                    \"quas qui at nihil consequuntur.\"\n                ],\n                \"picture\": \"http://local.dermaduell.test/magnam.jpg\"\n            }\n        ],\n        \"answersMe\": [\n            {\n                \"question_id\": 40,\n                \"is_correct\": false\n            },\n            {\n                \"question_id\": 29,\n                \"is_correct\": false\n            },\n            {\n                \"question_id\": 2,\n                \"is_correct\": false\n            }\n        ],\n        \"answersOther\": [\n            {\n                \"question_id\": 40,\n                \"is_correct\": true\n            },\n            {\n                \"question_id\": 29,\n                \"is_correct\": false\n            },\n            {\n                \"question_id\": 2,\n                \"is_correct\": true\n            }\n        ]\n    } \n]\n"
                          ]
                        }
                      },
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/games/{gameId}/rounds"
            },
            {
              "name": "Create New Round",
              "method": "POST",
              "description": "Create a new round for a given game. When creating a round, a category can be freely\nchosen. Users take turns creating rounds, so a round can only be created when it's\nthe requesting user's turn (see `myTurn` attribute when requesting \n[game information](#users-games-entity-show)). If it's not the user's turn, a `403`\nresponse will be returned.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "gameId",
                  "description": "ID of the game",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "Content-Type",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {
                  "application/json": {
                    "mediaType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "categoryId": {
                          "type": "number",
                          "examples": [
                            6
                          ],
                          "description": "ID of the category for this round"
                        }
                      },
                      "required": [
                        "categoryId"
                      ]
                    },
                    "examples": [
                      "{\n    \"categoryId\": 6\n}\n"
                    ]
                  }
                }
              },
              "responses": {
                "201": {
                  "statusCode": 201,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "integer",
                            "description": "Unique ID"
                          },
                          "categoryId": {
                            "type": "integer",
                            "description": "ID of the round category"
                          },
                          "questions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "question": {
                                  "type": "string"
                                },
                                "rightAnswer": {
                                  "type": "string"
                                },
                                "wrongAnswers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "picture": {
                                  "type": "string",
                                  "description": "URL for the question icon"
                                }
                              },
                              "required": [
                                "question",
                                "rightAnswer",
                                "wrongAnswers",
                                "picture"
                              ]
                            }
                          },
                          "answersOther": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "question_id": {
                                  "type": "number"
                                },
                                "is_correct": {
                                  "type": [
                                    "null",
                                    "boolean"
                                  ],
                                  "description": "Indicates whether the given answer was correct. Null when no answer given"
                                }
                              },
                              "required": [
                                "question_id",
                                "is_correct"
                              ]
                            }
                          },
                          "answersMe": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "question_id": {
                                  "type": "number"
                                },
                                "is_correct": {
                                  "type": [
                                    "null",
                                    "boolean"
                                  ],
                                  "description": "Indicates whether the given answer was correct. Null when no answer given"
                                }
                              },
                              "required": [
                                "question_id",
                                "is_correct"
                              ]
                            }
                          }
                        },
                        "required": [
                          "uid",
                          "categoryId",
                          "questions",
                          "answersOther",
                          "answersMe"
                        ]
                      },
                      "examples": [
                        "{\n    \"uid\": 13,\n    \"categoryId\": 8,\n    \"questions\": [\n        {\n            \"id\": 40,\n            \"question\": \"culpa dolor quo harum nesciunt?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"blanditiis et modi ea ut.\",\n                \"nisi earum ipsa molestias quis.\",\n                \"perferendis velit consequatur perferendis harum.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/corrupti.jpg\"\n        },\n        {\n            \"id\": 29,\n            \"question\": \"aut ea labore iure excepturi?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"eos maiores ea in nobis.\",\n                \"natus officiis quae iste molestiae.\",\n                \"mollitia aperiam quia sapiente temporibus.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/amet.jpg\"\n        },\n        {\n            \"id\": 2,\n            \"question\": \"voluptas qui quos sit voluptas?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"perspiciatis ad totam eos similique.\",\n                \"aut eum minima odio dolorem.\",\n                \"quas qui at nihil consequuntur.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/magnam.jpg\"\n        }\n    ],\n    \"answersMe\": [\n        {\n            \"question_id\": 40,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 29,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 2,\n            \"is_correct\": false\n        }\n    ],\n    \"answersOther\": [\n        {\n            \"question_id\": 40,\n            \"is_correct\": true\n        },\n        {\n            \"question_id\": 29,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 2,\n            \"is_correct\": true\n        }\n    ]\n}\n"
                      ]
                    }
                  },
                  "description": "Successfully created new round. "
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "404": {
                  "statusCode": 404,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": [
                        "[]\n"
                      ]
                    }
                  },
                  "description": "Resource could not be found."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "Content-Type",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {
                      "application/json": {
                        "mediaType": "application/json",
                        "schema": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                            "categoryId": {
                              "type": "number",
                              "examples": [
                                6
                              ],
                              "description": "ID of the category for this round"
                            }
                          },
                          "required": [
                            "categoryId"
                          ]
                        },
                        "examples": [
                          "{\n    \"categoryId\": 6\n}\n"
                        ]
                      }
                    }
                  },
                  "responses": {
                    "201": {
                      "statusCode": 201,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "uid": {
                                "type": "integer",
                                "description": "Unique ID"
                              },
                              "categoryId": {
                                "type": "integer",
                                "description": "ID of the round category"
                              },
                              "questions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "question": {
                                      "type": "string"
                                    },
                                    "rightAnswer": {
                                      "type": "string"
                                    },
                                    "wrongAnswers": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "picture": {
                                      "type": "string",
                                      "description": "URL for the question icon"
                                    }
                                  },
                                  "required": [
                                    "question",
                                    "rightAnswer",
                                    "wrongAnswers",
                                    "picture"
                                  ]
                                }
                              },
                              "answersOther": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "question_id": {
                                      "type": "number"
                                    },
                                    "is_correct": {
                                      "type": [
                                        "null",
                                        "boolean"
                                      ],
                                      "description": "Indicates whether the given answer was correct. Null when no answer given"
                                    }
                                  },
                                  "required": [
                                    "question_id",
                                    "is_correct"
                                  ]
                                }
                              },
                              "answersMe": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "question_id": {
                                      "type": "number"
                                    },
                                    "is_correct": {
                                      "type": [
                                        "null",
                                        "boolean"
                                      ],
                                      "description": "Indicates whether the given answer was correct. Null when no answer given"
                                    }
                                  },
                                  "required": [
                                    "question_id",
                                    "is_correct"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "uid",
                              "categoryId",
                              "questions",
                              "answersOther",
                              "answersMe"
                            ]
                          },
                          "examples": [
                            "{\n    \"uid\": 13,\n    \"categoryId\": 8,\n    \"questions\": [\n        {\n            \"id\": 40,\n            \"question\": \"culpa dolor quo harum nesciunt?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"blanditiis et modi ea ut.\",\n                \"nisi earum ipsa molestias quis.\",\n                \"perferendis velit consequatur perferendis harum.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/corrupti.jpg\"\n        },\n        {\n            \"id\": 29,\n            \"question\": \"aut ea labore iure excepturi?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"eos maiores ea in nobis.\",\n                \"natus officiis quae iste molestiae.\",\n                \"mollitia aperiam quia sapiente temporibus.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/amet.jpg\"\n        },\n        {\n            \"id\": 2,\n            \"question\": \"voluptas qui quos sit voluptas?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"perspiciatis ad totam eos similique.\",\n                \"aut eum minima odio dolorem.\",\n                \"quas qui at nihil consequuntur.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/magnam.jpg\"\n        }\n    ],\n    \"answersMe\": [\n        {\n            \"question_id\": 40,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 29,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 2,\n            \"is_correct\": false\n        }\n    ],\n    \"answersOther\": [\n        {\n            \"question_id\": 40,\n            \"is_correct\": true\n        },\n        {\n            \"question_id\": 29,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 2,\n            \"is_correct\": true\n        }\n    ]\n}\n"
                          ]
                        }
                      },
                      "description": "Successfully created new round. "
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "404": {
                      "statusCode": 404,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": [
                            "[]\n"
                          ]
                        }
                      },
                      "description": "Resource could not be found."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/games/{gameId}/rounds"
            },
            {
              "name": "Show Round",
              "method": "GET",
              "description": "Show details for a given round.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "gameId",
                  "description": "ID of the game",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "roundId",
                  "description": "ID of the round",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "integer",
                            "description": "Unique ID"
                          },
                          "categoryId": {
                            "type": "integer",
                            "description": "ID of the round category"
                          },
                          "questions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "question": {
                                  "type": "string"
                                },
                                "rightAnswer": {
                                  "type": "string"
                                },
                                "wrongAnswers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "picture": {
                                  "type": "string",
                                  "description": "URL for the question icon"
                                }
                              },
                              "required": [
                                "question",
                                "rightAnswer",
                                "wrongAnswers",
                                "picture"
                              ]
                            }
                          },
                          "answersOther": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "question_id": {
                                  "type": "number"
                                },
                                "is_correct": {
                                  "type": [
                                    "null",
                                    "boolean"
                                  ],
                                  "description": "Indicates whether the given answer was correct. Null when no answer given"
                                }
                              },
                              "required": [
                                "question_id",
                                "is_correct"
                              ]
                            }
                          },
                          "answersMe": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "question_id": {
                                  "type": "number"
                                },
                                "is_correct": {
                                  "type": [
                                    "null",
                                    "boolean"
                                  ],
                                  "description": "Indicates whether the given answer was correct. Null when no answer given"
                                }
                              },
                              "required": [
                                "question_id",
                                "is_correct"
                              ]
                            }
                          }
                        },
                        "required": [
                          "uid",
                          "categoryId",
                          "questions",
                          "answersOther",
                          "answersMe"
                        ]
                      },
                      "examples": [
                        "{\n    \"uid\": 13,\n    \"categoryId\": 8,\n    \"questions\": [\n        {\n            \"id\": 40,\n            \"question\": \"culpa dolor quo harum nesciunt?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"blanditiis et modi ea ut.\",\n                \"nisi earum ipsa molestias quis.\",\n                \"perferendis velit consequatur perferendis harum.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/corrupti.jpg\"\n        },\n        {\n            \"id\": 29,\n            \"question\": \"aut ea labore iure excepturi?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"eos maiores ea in nobis.\",\n                \"natus officiis quae iste molestiae.\",\n                \"mollitia aperiam quia sapiente temporibus.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/amet.jpg\"\n        },\n        {\n            \"id\": 2,\n            \"question\": \"voluptas qui quos sit voluptas?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"perspiciatis ad totam eos similique.\",\n                \"aut eum minima odio dolorem.\",\n                \"quas qui at nihil consequuntur.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/magnam.jpg\"\n        }\n    ],\n    \"answersMe\": [\n        {\n            \"question_id\": 40,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 29,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 2,\n            \"is_correct\": false\n        }\n    ],\n    \"answersOther\": [\n        {\n            \"question_id\": 40,\n            \"is_correct\": true\n        },\n        {\n            \"question_id\": 29,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 2,\n            \"is_correct\": true\n        }\n    ]\n}\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "404": {
                  "statusCode": 404,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": [
                        "[]\n"
                      ]
                    }
                  },
                  "description": "Resource could not be found."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {}
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "uid": {
                                "type": "integer",
                                "description": "Unique ID"
                              },
                              "categoryId": {
                                "type": "integer",
                                "description": "ID of the round category"
                              },
                              "questions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "question": {
                                      "type": "string"
                                    },
                                    "rightAnswer": {
                                      "type": "string"
                                    },
                                    "wrongAnswers": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "picture": {
                                      "type": "string",
                                      "description": "URL for the question icon"
                                    }
                                  },
                                  "required": [
                                    "question",
                                    "rightAnswer",
                                    "wrongAnswers",
                                    "picture"
                                  ]
                                }
                              },
                              "answersOther": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "question_id": {
                                      "type": "number"
                                    },
                                    "is_correct": {
                                      "type": [
                                        "null",
                                        "boolean"
                                      ],
                                      "description": "Indicates whether the given answer was correct. Null when no answer given"
                                    }
                                  },
                                  "required": [
                                    "question_id",
                                    "is_correct"
                                  ]
                                }
                              },
                              "answersMe": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "question_id": {
                                      "type": "number"
                                    },
                                    "is_correct": {
                                      "type": [
                                        "null",
                                        "boolean"
                                      ],
                                      "description": "Indicates whether the given answer was correct. Null when no answer given"
                                    }
                                  },
                                  "required": [
                                    "question_id",
                                    "is_correct"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "uid",
                              "categoryId",
                              "questions",
                              "answersOther",
                              "answersMe"
                            ]
                          },
                          "examples": [
                            "{\n    \"uid\": 13,\n    \"categoryId\": 8,\n    \"questions\": [\n        {\n            \"id\": 40,\n            \"question\": \"culpa dolor quo harum nesciunt?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"blanditiis et modi ea ut.\",\n                \"nisi earum ipsa molestias quis.\",\n                \"perferendis velit consequatur perferendis harum.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/corrupti.jpg\"\n        },\n        {\n            \"id\": 29,\n            \"question\": \"aut ea labore iure excepturi?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"eos maiores ea in nobis.\",\n                \"natus officiis quae iste molestiae.\",\n                \"mollitia aperiam quia sapiente temporibus.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/amet.jpg\"\n        },\n        {\n            \"id\": 2,\n            \"question\": \"voluptas qui quos sit voluptas?\",\n            \"rightAnswer\": \"This is the right answer.\",\n            \"wrongAnswers\": [\n                \"perspiciatis ad totam eos similique.\",\n                \"aut eum minima odio dolorem.\",\n                \"quas qui at nihil consequuntur.\"\n            ],\n            \"picture\": \"http://local.dermaduell.test/magnam.jpg\"\n        }\n    ],\n    \"answersMe\": [\n        {\n            \"question_id\": 40,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 29,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 2,\n            \"is_correct\": false\n        }\n    ],\n    \"answersOther\": [\n        {\n            \"question_id\": 40,\n            \"is_correct\": true\n        },\n        {\n            \"question_id\": 29,\n            \"is_correct\": false\n        },\n        {\n            \"question_id\": 2,\n            \"is_correct\": true\n        }\n    ]\n}\n"
                          ]
                        }
                      },
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "404": {
                      "statusCode": 404,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": [
                            "[]\n"
                          ]
                        }
                      },
                      "description": "Resource could not be found."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/games/{gameId}/rounds/{roundId}"
            },
            {
              "name": "Update Answers",
              "method": "PUT",
              "description": "Update user answers for given round. Answers can only be updated once, after which\nthey are sealed and cannot be modified again.",
              "parameters": [
                {
                  "location": "path",
                  "name": "id",
                  "description": "ID of the requesting user",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "gameId",
                  "description": "ID of the game",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                },
                {
                  "location": "path",
                  "name": "roundId",
                  "description": "ID of the round",
                  "required": true,
                  "example": "1",
                  "deprecated": false,
                  "schema": {
                    "type": "number"
                  }
                }
              ],
              "request": {
                "headers": [
                  {
                    "name": "Content-Type",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {
                  "application/json": {
                    "mediaType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "answers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "question_id": {
                                "type": "number",
                                "description": "ID of the question the answer is for"
                              },
                              "is_correct": {
                                "type": "boolean",
                                "description": "Boolean indicating whether the answer was correct or not"
                              }
                            },
                            "required": [
                              "question_id",
                              "is_correct"
                            ]
                          },
                          "description": "Answers given by the user"
                        }
                      },
                      "required": [
                        "answers"
                      ]
                    },
                    "examples": [
                      "{\n    \"answers\": [\n        {\n            \"question_id\": 29,\n            \"is_correct\": true\n        },\n        {\n            \"question_id\": 28,\n            \"is_correct\": true\n        },\n        {\n            \"question_id\": 27,\n            \"is_correct\": true\n        }\n    ]\n}\n"
                    ]
                  }
                }
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {},
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "404": {
                  "statusCode": 404,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "examples": [
                        "[]\n"
                      ]
                    }
                  },
                  "description": "Resource could not be found."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              },
              "transactions": [
                {
                  "request": {
                    "headers": [
                      {
                        "name": "Content-Type",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "DD-Auth",
                        "example": "<token>",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      },
                      {
                        "name": "Accept",
                        "example": "application/json",
                        "schema": {
                          "type": "string"
                        },
                        "deprecated": false,
                        "required": false
                      }
                    ],
                    "body": {
                      "application/json": {
                        "mediaType": "application/json",
                        "schema": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                            "answers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "question_id": {
                                    "type": "number",
                                    "description": "ID of the question the answer is for"
                                  },
                                  "is_correct": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether the answer was correct or not"
                                  }
                                },
                                "required": [
                                  "question_id",
                                  "is_correct"
                                ]
                              },
                              "description": "Answers given by the user"
                            }
                          },
                          "required": [
                            "answers"
                          ]
                        },
                        "examples": [
                          "{\n    \"answers\": [\n        {\n            \"question_id\": 29,\n            \"is_correct\": true\n        },\n        {\n            \"question_id\": 28,\n            \"is_correct\": true\n        },\n        {\n            \"question_id\": 27,\n            \"is_correct\": true\n        }\n    ]\n}\n"
                        ]
                      }
                    }
                  },
                  "responses": {
                    "200": {
                      "statusCode": 200,
                      "headers": [],
                      "body": {},
                      "description": "Successful response."
                    },
                    "403": {
                      "statusCode": 403,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Invalid or missing authentication details."
                    },
                    "404": {
                      "statusCode": 404,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "examples": [
                            "[]\n"
                          ]
                        }
                      },
                      "description": "Resource could not be found."
                    },
                    "405": {
                      "statusCode": 405,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Method not allowed. Wrong HTTP method used to access this resource."
                    },
                    "500": {
                      "statusCode": 500,
                      "headers": [],
                      "body": {
                        "application/json": {
                          "mediaType": "application/json",
                          "schema": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          "examples": [
                            "{\n    \"message\": \"\"\n}\n"
                          ]
                        }
                      },
                      "description": "Internal server error."
                    }
                  }
                }
              ],
              "deprecated": false,
              "securedBy": [
                {
                  "default": []
                }
              ],
              "uri": "/users/{id}/games/{gameId}/rounds/{roundId}"
            }
          ]
        }
      ],
      "operations": [
        {
          "name": "Get Random Game",
          "method": "GET",
          "description": "Fetch or create a random game for the requesting user. If no opponent also looking\nfor a random game could be found, a new game will be created. Opponents looking\nfor random games in the future may then join this game. Only of these \"opponent-less\"\ngames may be active at any given time.",
          "parameters": [
            {
              "location": "path",
              "name": "id",
              "description": "ID of the requesting user",
              "required": true,
              "example": "1",
              "deprecated": false,
              "schema": {
                "type": "number"
              }
            }
          ],
          "request": {
            "headers": [
              {
                "name": "DD-Auth",
                "example": "<token>",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              },
              {
                "name": "Accept",
                "example": "application/json",
                "schema": {
                  "type": "string"
                },
                "deprecated": false,
                "required": false
              }
            ],
            "body": {}
          },
          "responses": {
            "200": {
              "statusCode": 200,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "integer",
                        "description": "Unique ID"
                      },
                      "status": {
                        "type": "number",
                        "enum": [
                          0,
                          1,
                          2
                        ],
                        "description": "Game status (0 = active, 1 = finished, 2 = new)"
                      },
                      "abandoned": {
                        "type": "integer",
                        "description": "ID of the user that abandoned the game, or -1 when the game has not been abandoned"
                      },
                      "idOtherUser": {
                        "type": "integer",
                        "description": "ID of the opponent. If 0, no opponent is set for this game"
                      },
                      "scoreMe": {
                        "type": "integer",
                        "description": "Total score for the requesting user"
                      },
                      "scoreOther": {
                        "type": "integer",
                        "description": "Total score for the opponent"
                      },
                      "myTurn": {
                        "type": "integer",
                        "enum": [
                          0,
                          1
                        ],
                        "description": "Boolean flag to indicate whether it's the user's turn (1) or not (0) to create a new round"
                      }
                    },
                    "required": [
                      "uid",
                      "status",
                      "abandoned",
                      "idOtherUser",
                      "scoreMe",
                      "scoreOther",
                      "myTurn"
                    ]
                  },
                  "examples": [
                    "{\n    \"uid\": 1001,\n    \"status\": 2,\n    \"abandoned\": -1,\n    \"idOtherUser\": 0,\n    \"scoreMe\": 0,\n    \"scoreOther\": 0,\n    \"myTurn\": 1\n}\n"
                  ]
                }
              },
              "description": "Successful response."
            },
            "403": {
              "statusCode": 403,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Invalid or missing authentication details."
            },
            "405": {
              "statusCode": 405,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Method not allowed. Wrong HTTP method used to access this resource."
            },
            "500": {
              "statusCode": 500,
              "headers": [],
              "body": {
                "application/json": {
                  "mediaType": "application/json",
                  "schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  },
                  "examples": [
                    "{\n    \"message\": \"\"\n}\n"
                  ]
                }
              },
              "description": "Internal server error."
            }
          },
          "transactions": [
            {
              "request": {
                "headers": [
                  {
                    "name": "DD-Auth",
                    "example": "<token>",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  },
                  {
                    "name": "Accept",
                    "example": "application/json",
                    "schema": {
                      "type": "string"
                    },
                    "deprecated": false,
                    "required": false
                  }
                ],
                "body": {}
              },
              "responses": {
                "200": {
                  "statusCode": 200,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "integer",
                            "description": "Unique ID"
                          },
                          "status": {
                            "type": "number",
                            "enum": [
                              0,
                              1,
                              2
                            ],
                            "description": "Game status (0 = active, 1 = finished, 2 = new)"
                          },
                          "abandoned": {
                            "type": "integer",
                            "description": "ID of the user that abandoned the game, or -1 when the game has not been abandoned"
                          },
                          "idOtherUser": {
                            "type": "integer",
                            "description": "ID of the opponent. If 0, no opponent is set for this game"
                          },
                          "scoreMe": {
                            "type": "integer",
                            "description": "Total score for the requesting user"
                          },
                          "scoreOther": {
                            "type": "integer",
                            "description": "Total score for the opponent"
                          },
                          "myTurn": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ],
                            "description": "Boolean flag to indicate whether it's the user's turn (1) or not (0) to create a new round"
                          }
                        },
                        "required": [
                          "uid",
                          "status",
                          "abandoned",
                          "idOtherUser",
                          "scoreMe",
                          "scoreOther",
                          "myTurn"
                        ]
                      },
                      "examples": [
                        "{\n    \"uid\": 1001,\n    \"status\": 2,\n    \"abandoned\": -1,\n    \"idOtherUser\": 0,\n    \"scoreMe\": 0,\n    \"scoreOther\": 0,\n    \"myTurn\": 1\n}\n"
                      ]
                    }
                  },
                  "description": "Successful response."
                },
                "403": {
                  "statusCode": 403,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Invalid or missing authentication details."
                },
                "405": {
                  "statusCode": 405,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Method not allowed. Wrong HTTP method used to access this resource."
                },
                "500": {
                  "statusCode": 500,
                  "headers": [],
                  "body": {
                    "application/json": {
                      "mediaType": "application/json",
                      "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      "examples": [
                        "{\n    \"message\": \"\"\n}\n"
                      ]
                    }
                  },
                  "description": "Internal server error."
                }
              }
            }
          ],
          "deprecated": false,
          "securedBy": [
            {
              "default": []
            }
          ],
          "uri": "/users/{id}/random-game"
        }
      ]
    }
  ],
  "operations": []
}